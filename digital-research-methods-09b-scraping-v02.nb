(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     72982,       2005]
NotebookOptionsPosition[     63372,       1711]
NotebookOutlinePosition[     65196,       1763]
CellTagsIndexPosition[     65117,       1758]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[2, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 
         0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {
         2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{3.647361175465108*^9},
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell["\<\
Digital Research Methods 09B:
Scraping\
\>", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.647331852839075*^9, 3.647331861295168*^9}, {
   3.647331922221755*^9, 3.647331924532915*^9}, {3.647332658962614*^9, 
   3.64733266480881*^9}, {3.6473611327373047`*^9, 3.647361139759391*^9}, {
   3.647448943135475*^9, 3.6474489472294493`*^9}, {3.654704988559683*^9, 
   3.6547049928061*^9}}],

Cell[TextData[{
 "William J Turkel, ",
 StyleBox["wturkel@uwo.ca",
  FontSlant->"Italic",
  FontColor->RGBColor[
   0.396078431372549, 0.596078431372549, 0.796078431372549]],
 "\nHistory 2816 / Digital Humanities 2130 / History 9877"
}], "Subtitle",
 CellChangeTimes->{{3.647331955723979*^9, 3.6473319708190517`*^9}, 
   3.647332103720562*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Overview", "Section",
 CellChangeTimes->{{3.647361153919208*^9, 3.6473611548467712`*^9}}],

Cell[TextData[{
 "The process of extracting information from a web page is known as \
\[OpenCurlyDoubleQuote]web scraping,\[CloseCurlyDoubleQuote] \
\[OpenCurlyDoubleQuote]screen scraping\[CloseCurlyDoubleQuote] or simply \
\[OpenCurlyDoubleQuote]scraping.\[CloseCurlyDoubleQuote] The basic idea is to \
download the HTML source of the page, then use pattern matching on the tags \
surrounding the information that you want to extract. Since a small change on \
the web site can often break your scraper, this technique is ",
 StyleBox["brittle",
  FontSlant->"Italic"],
 ". Broken scrapers are usually easy to fix, however."
}], "Text",
 CellChangeTimes->{{3.647361157582405*^9, 3.647361159086673*^9}, {
  3.654705002078453*^9, 3.654705214598414*^9}, {3.6559223645856323`*^9, 
  3.655922382224031*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Setup", "Section",
 CellChangeTimes->{{3.647716369451888*^9, 3.647716370003084*^9}, {
  3.647798474690284*^9, 3.6477984752570744`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"viewData", "[", "x_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Framed", "[", 
   RowBox[{"Pane", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "200"}], "}"}], ",", 
     RowBox[{"Scrollbars", "\[Rule]", "True"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.511539182255096*^9, 3.51153920239167*^9}}],

Cell[CellGroupData[{

Cell["Interactive pattern matching tool", "Subsection",
 CellChangeTimes->{{3.6559227250994177`*^9, 3.655922730539188*^9}}],

Cell["\<\
We will be making use of the interactive pattern matching tool to identify \
HTML tags that surround information we want to scrape out\
\>", "Text",
 CellChangeTimes->{{3.6559227337065887`*^9, 3.6559227572022552`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"characterPositionComplement", "[", 
   RowBox[{"len_", ",", "plist_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Part", "[", 
             RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"plist", "+", "1"}], ")"}]}], ",", "1"}], "]"}], ",", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Part", "[", 
             RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"plist", "-", "1"}], ")"}]}], ",", "len"}], "]"}]}], 
       "}"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LessEqual]", 
      RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.644338921378498*^9, 3.64433900160914*^9}, {
  3.644339152488393*^9, 3.6443391674807577`*^9}, {3.6443392662297773`*^9, 
  3.644339300142775*^9}, {3.644339334951146*^9, 3.644339343397431*^9}, {
  3.644339481145607*^9, 3.644339491484367*^9}, {3.644339522907679*^9, 
  3.6443395418425903`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"highlightCharacterPositions", "[", 
   RowBox[{"str_", ",", "plist_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"len", "=", 
       RowBox[{"StringLength", "[", "str", "]"}]}], ",", "graylist", ",", 
      "boldlist"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"boldlist", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"{", 
         RowBox[{"plist", ",", "Bold"}], "}"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graylist", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"characterPositionComplement", "[", 
           RowBox[{"len", ",", "plist"}], "]"}], ",", "Gray"}], "}"}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Row", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"str", ",", 
             RowBox[{"First", "[", "#", "]"}]}], "]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], "&"}], "/@", 
        RowBox[{"Sort", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"boldlist", ",", "graylist"}], "]"}], "]"}]}], "]"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6443376479251966`*^9, 3.644337668085683*^9}, {
  3.644337727739802*^9, 3.644337732163228*^9}, {3.644337768250429*^9, 
  3.6443377732258577`*^9}, {3.644337835055591*^9, 3.644337849863278*^9}, {
  3.644339667238628*^9, 3.6443396949449863`*^9}, {3.644346001767509*^9, 
  3.644346142938743*^9}, {3.644346207000207*^9, 3.644346498160934*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"patternMatchTool", "[", "src_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "pos", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pos", "=", 
        RowBox[{"StringPosition", "[", 
         RowBox[{"src", ",", "p"}], "]"}]}], ";", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Pane", "[", 
           RowBox[{
            RowBox[{"highlightCharacterPositions", "[", 
             RowBox[{"src", ",", "pos"}], "]"}], ",", 
            RowBox[{"Scrollbars", "\[Rule]", "True"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Full", ",", "200"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Pane", "[", 
           RowBox[{
            RowBox[{"Column", "[", 
             RowBox[{"StringTake", "[", 
              RowBox[{"src", ",", "pos"}], "]"}], "]"}], ",", 
            RowBox[{"Scrollbars", "\[Rule]", "True"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Full", ",", "200"}], "}"}]}]}], "]"}]}], "}"}], 
        "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "\"\<title\>\"", ",", 
      RowBox[{
       RowBox[{"InputField", "[", 
        RowBox[{"#", ",", 
         RowBox[{"FieldSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"60", ",", " ", "3"}], "}"}]}], ",", 
         RowBox[{"BaseStyle", "\[Rule]", "12"}]}], "]"}], "&"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6459749666742783`*^9, 3.6459750367874937`*^9}, 
   3.645975302282854*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["HTML page source", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.655922635391083*^9, 3.655922640646452*^9}}],

Cell[TextData[{
 "We have seen that we can use the ",
 StyleBox["Import",
  FontWeight->"Bold"],
 " command to request the title, hyperlinks and plaintext from a web page. We \
can also request the HTML source. If you are not already familiar with HTML, \
spend a few minutes looking at the source for the ",
 StyleBox["Darwin Correspondence Project",
  FontSlant->"Italic"],
 " homepage as it appeared on July 15, 2015. Notice that some of the tags are \
already familiar: ",
 StyleBox["!DOCTYPE",
  FontSlant->"Italic"],
 ", ",
 StyleBox["html",
  FontSlant->"Italic"],
 ", ",
 StyleBox["head",
  FontSlant->"Italic"],
 ", ",
 StyleBox["title",
  FontSlant->"Italic"],
 ", ",
 StyleBox["body",
  FontSlant->"Italic"],
 ", ",
 StyleBox["a",
  FontSlant->"Italic"],
 " and ",
 StyleBox["em",
  FontSlant->"Italic"],
 ". This particular page also uses the web scripting language JavaScript, \
Cascading Style Sheets (CSS) for formatting, some layout tags like ",
 StyleBox["div",
  FontSlant->"Italic"],
 " and ",
 StyleBox["span",
  FontSlant->"Italic"],
 ", and many other elements."
}], "Text",
 CellChangeTimes->{{3.6458917569722023`*^9, 3.645891768922327*^9}, {
   3.645891810162025*^9, 3.6458918579753838`*^9}, {3.645891903910967*^9, 
   3.6458920150336123`*^9}, {3.645892046016464*^9, 3.6458921686522007`*^9}, {
   3.64589221033928*^9, 3.6458922353698673`*^9}, 3.645974477720295*^9, {
   3.645980025241431*^9, 3.6459800798623867`*^9}}],

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\<https://web.archive.org/web/20150715195311/http://www.darwinproject.ac.\
uk\>\"", ",", "\"\<Elements\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6445942877590227`*^9, 3.644594310728959*^9}, 
   3.645974386206222*^9, 3.645979857905024*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"darwinCorrespondenceProjectNews", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://web.archive.org/web/20150715195311/http://www.darwinproject.\
ac.uk\>\"", ",", "\"\<Source\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.645975046833542*^9, 3.645975114384987*^9}, 
   3.6459798706640787`*^9}],

Cell[BoxData[
 RowBox[{"viewData", "[", "darwinCorrespondenceProjectNews", "]"}]], "Input",
 CellChangeTimes->{{3.6445942877590227`*^9, 3.644594310728959*^9}, {
   3.64589194020508*^9, 3.645891950076045*^9}, 3.6459743953185062`*^9, {
   3.645975111795598*^9, 3.645975118978529*^9}, {3.6559226913012753`*^9, 
   3.65592269378791*^9}}],

Cell["\<\
If your goal is simply to extract information from the page, you often don\
\[CloseCurlyQuote]t need to understand how the whole thing is formatted. You \
simply need to identify the tags that appear in the immediate vicinity of the \
information you want to grab, and use those to define a pattern.\
\>", "Text",
 CellChangeTimes->{{3.645892242905932*^9, 3.6458922514810658`*^9}, {
  3.645892778255641*^9, 3.645892778501856*^9}, {3.6458928169725027`*^9, 
  3.645892818788404*^9}, {3.645973920668057*^9, 3.645974014104033*^9}, {
  3.645981179312111*^9, 3.6459811824789457`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Interactive pattern matching", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.6559228807911177`*^9, 3.65592290291004*^9}}],

Cell["\<\
Open the page in your browser, too, so you can compare the code with the page \
as it appears in the browser\
\>", "Text",
 CellChangeTimes->{{3.6559231819393587`*^9, 3.655923186570733*^9}, {
  3.655923227376974*^9, 3.6559232390404873`*^9}}],

Cell[TextData[ButtonBox["https://web.archive.org/web/20150715195311/http://\
www.darwinproject.ac.uk",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://web.archive.org/web/20150715195311/http://www.darwinproject.\
ac.uk"], None},
 ButtonNote->
  "https://web.archive.org/web/20150715195311/http://www.darwinproject.ac.uk"]\
], "Text",
 CellChangeTimes->{{3.655923188535039*^9, 3.655923194632846*^9}}],

Cell[BoxData[
 RowBox[{"patternMatchTool", "[", "darwinCorrespondenceProjectNews", 
  "]"}]], "Input",
 CellChangeTimes->{{3.645975148062352*^9, 3.645975165211981*^9}}],

Cell[CellGroupData[{

Cell["Some patterns to try", "Subsection",
 CellChangeTimes->{{3.6559229162126293`*^9, 3.655922918980568*^9}}],

Cell["\<\
The tool is set up to match the default pattern \[OpenCurlyDoubleQuote]title\
\[CloseCurlyDoubleQuote]. Note how the title tags and attributes are \
highlighted in the source code. Try entering each of these other patterns to \
get a feel for how the tool works. Be sure to compare the code panel on top \
with the extracted strings in the panel below.\
\>", "Text",
 CellChangeTimes->{{3.645975170950777*^9, 3.645975201797299*^9}, {
  3.6459752976986513`*^9, 3.64597536196765*^9}, {3.655922940100691*^9, 
  3.65592294025181*^9}, {3.6559229703862*^9, 3.6559229707144747`*^9}, {
  3.655923012592595*^9, 3.655923039560091*^9}}],

Cell[CellGroupData[{

Cell["CSS files", "Subsubsection",
 CellChangeTimes->{{3.6559230548152018`*^9, 3.655923065799226*^9}}],

Cell["\<\
This pattern matches all of the Cascading Style Sheet (CSS) files used by the \
page:\
\>", "Text",
 CellChangeTimes->{{3.6459812529960413`*^9, 3.6459812740994673`*^9}}],

Cell[BoxData[
 RowBox[{"WordBoundary", "~~", 
  RowBox[{"WordCharacter", ".."}], "~~", "\"\<.css\>\""}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{
  3.6459755529068937`*^9, {3.649251772211109*^9, 3.6492517837891006`*^9}, {
   3.685637742814918*^9, 3.685637742815647*^9}}],

Cell[TextData[{
 "How would you modify it to correctly capture ",
 StyleBox["banner-styles.css",
  FontSlant->"Italic"],
 "?"
}], "Text",
 CellChangeTimes->{{3.6559230495113707`*^9, 3.6559230955895967`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["HTML comments", "Subsubsection",
 CellChangeTimes->{{3.655923102325458*^9, 3.655923105110011*^9}}],

Cell["\<\
This pattern shows us material that has been formatted with HTML comment \
tags. Note that the last comment was added by the Internet Archive when the \
page was saved (as were some of the other comments).\
\>", "Text",
 CellChangeTimes->{{3.645981303594082*^9, 3.6459813983672113`*^9}}],

Cell[BoxData[
 RowBox[{"Shortest", "[", 
  RowBox[{"\"\<<!--\>\"", "~~", "__", "~~", "\"\<-->\>\""}], "]"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.645975948935478*^9, 3.645975950852859*^9}, 
   3.645982659625813*^9, {3.649251772211404*^9, 3.649251792316792*^9}, {
   3.685637742816712*^9, 3.685637742817293*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Site description", "Subsubsection",
 CellChangeTimes->{{3.655923133828311*^9, 3.655923135684856*^9}}],

Cell["\<\
This pattern scrapes out the paragraph that describes the website:\
\>", "Text",
 CellChangeTimes->{{3.6459814117182407`*^9, 3.645981434525837*^9}}],

Cell[BoxData[
 RowBox[{"Shortest", "[", 
  RowBox[{
  "\"\<<section class=\\\"site_description\\\">\>\"", "~~", "__", "~~", 
   "\"\<</section>\>\""}], "]"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.6459763635595512`*^9, 3.645976365325691*^9}, 
   3.645982658137999*^9, {3.649251772211685*^9, 3.6492517995405817`*^9}, {
   3.685637742818302*^9, 3.685637742818871*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Themes", "Subsubsection",
 CellChangeTimes->{{3.655923139412032*^9, 3.655923140020588*^9}}],

Cell["This pattern shows us the menu entries under \
\[OpenCurlyDoubleQuote]Themes\[CloseCurlyDoubleQuote].", "Text",
 CellChangeTimes->{{3.6459814530127363`*^9, 3.645981467716777*^9}}],

Cell[BoxData[
 RowBox[{"Shortest", "[", 
  RowBox[{"\"\<id=\\\"menu-themes-\>\"", "~~", "__", "~~", "\"\<\\\"\>\""}], 
  "]"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.645976193711491*^9, 3.6459761962446337`*^9}, 
   3.645982656858018*^9, 3.649251772211945*^9, {3.6492518031405087`*^9, 
   3.649251806708353*^9}, {3.685637742819859*^9, 3.68563774282043*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Navigation", "Subsubsection",
 CellChangeTimes->{{3.655923151739633*^9, 3.655923154692128*^9}}],

Cell["\<\
This pattern shows us all of the parts of the page that contain items used \
for navigating the site:\
\>", "Text",
 CellChangeTimes->{{3.645981496027252*^9, 3.645981497595539*^9}, {
  3.645981537171013*^9, 3.645981569872652*^9}}],

Cell[BoxData[
 RowBox[{"Shortest", "[", 
  RowBox[{
  "\"\<<div class=\\\"nav-item-container\\\">\>\"", "~~", "__", "~~", 
   "\"\<</div>\>\""}], "]"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.64597607015914*^9, 3.6459760753682547`*^9}, 
   3.64598265525812*^9, 3.649251772212185*^9, {3.649251812124158*^9, 
   3.6492518164519987`*^9}, {3.6856377428214293`*^9, 3.685637742821999*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["News", "Subsubsection",
 CellChangeTimes->{{3.65592315724349*^9, 3.65592315765203*^9}}],

Cell["\<\
And this pattern scrapes the links and titles of the news items:\
\>", "Text",
 CellChangeTimes->{{3.645981587567923*^9, 3.645981611039295*^9}}],

Cell[BoxData[
 RowBox[{"Shortest", "[", 
  RowBox[{
  "\"\<<h2 class=\\\"news_item_title\\\">\>\"", "~~", "__", "~~", 
   "\"\<</h2>\>\""}], "]"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.6459769023372803`*^9, 3.645976904610125*^9}, 
   3.645982653897987*^9, 3.64925177221242*^9, {3.649251820083806*^9, 
   3.649251823579743*^9}, {3.685637742822997*^9, 3.685637742823722*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Scraping information from a web page", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.655923260305704*^9, 3.6559232661121063`*^9}}],

Cell[CellGroupData[{

Cell["Scraping information from a web page", "Subsubsection",
 CellChangeTimes->{{3.6459778840210247`*^9, 3.645977897852054*^9}}],

Cell["\<\
Now suppose we want to pull out the titles of the news items from this page. \
We can use the last pattern from above as follows:\
\>", "Text",
 CellChangeTimes->{{3.645976916103859*^9, 3.6459769701897373`*^9}}],

Cell[BoxData[
 RowBox[{"StringCases", "[", 
  RowBox[{"darwinCorrespondenceProjectNews", ",", 
   RowBox[{
    RowBox[{"Shortest", "[", 
     RowBox[{
     "\"\<<h2 class=\\\"news_item_title\\\">\>\"", "~~", "titles__", "~~", 
      "\"\<</h2>\>\""}], "]"}], "\[Rule]", "titles"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64597697612998*^9, 3.6459770102043333`*^9}, 
   3.645982643132368*^9}],

Cell["\<\
If we only want the labels from the hyperlinks, we can modify the pattern as \
shown below. (We have added stuff to the pattern to match the anchor tags).\
\>", "Text",
 CellChangeTimes->{{3.645977037986876*^9, 3.645977051594039*^9}, {
  3.6459770823296013`*^9, 3.645977091081304*^9}, {3.6459772731073017`*^9, 
  3.645977296201868*^9}, {3.645981646455488*^9, 3.645981646622342*^9}, {
  3.646498665302997*^9, 3.646498667781948*^9}}],

Cell[BoxData[
 RowBox[{"Shortest", "[", 
  RowBox[{
  "\"\<<h2 class=\\\"news_item_title\\\"><a \>\"", "~~", "__", "~~", 
   "\"\<>\>\"", "~~", "__", "~~", "\"\<</a></h2>\>\""}], "]"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.6459769023372803`*^9, 3.645976904610125*^9}, {
   3.645977235566318*^9, 3.645977261749434*^9}, 3.645982398323*^9}],

Cell[TextData[{
 "Then the ",
 StyleBox["StringCases",
  FontWeight->"Bold"],
 " command becomes"
}], "Text",
 CellChangeTimes->{{3.645977113168807*^9, 3.645977117896303*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"StringCases", "[", 
   RowBox[{"darwinCorrespondenceProjectNews", ",", 
    RowBox[{
     RowBox[{"Shortest", "[", 
      RowBox[{
      "\"\<<h2 class=\\\"news_item_title\\\"><a \>\"", "~~", "__", "~~", 
       "\"\<>\>\"", "~~", "titles__", "~~", "\"\<</a></h2>\>\""}], "]"}], 
     "\[Rule]", "titles"}]}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.64597697612998*^9, 3.6459770102043333`*^9}, {
   3.645977128815789*^9, 3.645977184565968*^9}, 3.6459823951317997`*^9}],

Cell["\<\
Suppose we want to scrape the date that each news item was posted, too. We \
modify the pattern to capture still more material.\
\>", "Text",
 CellChangeTimes->{{3.645981652781774*^9, 3.645981665301579*^9}, {
  3.6459821396451597`*^9, 3.6459821547722178`*^9}, {3.645982315079597*^9, 
  3.6459823352858343`*^9}, {3.6459823705731163`*^9, 3.645982371052546*^9}, {
  3.645983708654007*^9, 3.645983712612843*^9}, {3.646498681638358*^9, 
  3.646498682269561*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"StringCases", "[", 
   RowBox[{"darwinCorrespondenceProjectNews", ",", 
    RowBox[{
     RowBox[{"Shortest", "[", 
      RowBox[{
      "\"\<<h2 class=\\\"news_item_title\\\"><a \>\"", "~~", "__", "~~", 
       "\"\<>\>\"", "~~", "titles__", "~~", "\"\<</a></h2>\>\"", "~~", "__", 
       "~~", "\"\<Posted on \>\"", "~~", "dates__", "~~", "\"\< in\>\""}], 
      "]"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"titles", ",", "dates"}], "}"}]}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.64597697612998*^9, 3.6459770102043333`*^9}, {
  3.645977128815789*^9, 3.645977184565968*^9}, {3.645982161563717*^9, 
  3.645982277007925*^9}, {3.645982358332637*^9, 3.6459823846698008`*^9}}],

Cell[TextData[{
 "Once you get the hang of it, scraping can be remarkably quick and powerful. \
One drawback, however, is that scraping is also very brittle. Often the \
content provider need only make a single change to their website to \
inadvertently break your scraper. This isn\[CloseCurlyQuote]t a problem if \
you only need to scrape the page once, or once in a while. Just archive a \
copy in the ",
 StyleBox["Wayback Machine",
  FontSlant->"Italic"],
 " and scrape the archived copy. If you scrape a site frequently you will \
find that you need to revise your scrapers from time to time."
}], "Text",
 CellChangeTimes->{{3.6459773060172453`*^9, 3.6459773884146976`*^9}, {
  3.64598012746027*^9, 3.645980261392021*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Markup languages: XML", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.654166525274431*^9, 3.654166530352902*^9}}],

Cell[TextData[{
 "Unlike HTML, which uses a limited set of predefined tags to indicate how \
data should be rendered or displayed, the Extensible Markup Language (XML) \
uses tags to ",
 StyleBox["describe",
  FontSlant->"Italic"],
 " data. There are many standards for representing various kinds of metadata \
with XML, but users are also free to define their own tags. This flexibility, \
and the fact that XML is both human- and machine-readible, makes it a very \
powerful way to represent textual and numeric information."
}], "Text",
 CellChangeTimes->{{3.645982954519794*^9, 3.6459830517883053`*^9}, {
  3.645983082595269*^9, 3.645983089523077*^9}, {3.6459831260369062`*^9, 
  3.645983210094821*^9}, {3.646498717556802*^9, 3.646498802209251*^9}}],

Cell[CellGroupData[{

Cell["OCLC Classify web service", "Subsubsection",
 CellChangeTimes->{{3.654166650229005*^9, 3.654166654524186*^9}, {
  3.6541668246548843`*^9, 3.654166825054203*^9}}],

Cell["\<\
So that we have a short piece of XML to look at, I am going to request \
information about a biography of Darwin written by Adrian J. Desmond and \
James R. Moore. To do this, I am using a web service created by the Online \
Computer Library Center (OCLC) called Classify. If you send the book ISBN in \
a URL to OCLC Classify, the system will respond with a file of bibliographic \
information marked up with XML.\
\>", "Text",
 CellChangeTimes->{{3.646499220264966*^9, 3.6464992642958727`*^9}, {
   3.646500204868194*^9, 3.646500398189623*^9}, {3.646504441503633*^9, 
   3.6465044447510138`*^9}, 3.654166681604051*^9}],

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\<http://classify.oclc.org/classify2/Classify?isbn=0393311503&summary=\
true\>\"", ",", "\"\<Elements\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6464989380678*^9, 3.646498939204504*^9}, {
   3.646500056951043*^9, 3.646500061513832*^9}, 3.646500119043436*^9}],

Cell[TextData[{
 "In order to see the raw XML, I am converting it to a string before passing \
it off to ",
 StyleBox["viewData",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.646499220264966*^9, 3.6464992642958727`*^9}, {
  3.646500204868194*^9, 3.646500398189623*^9}, {3.646504441503633*^9, 
  3.6465044447510138`*^9}, {3.654166681604051*^9, 3.654166683442932*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"biographyXMLstring", "=", 
   RowBox[{"StringRiffle", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Import", "[", 
       RowBox[{
       "\"\<http://classify.oclc.org/classify2/Classify?isbn=0393311503&\
summary=true\>\"", ",", "\"\<Data\>\""}], "]"}], "]"}], ",", "\"\<\\n\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.646501237627932*^9, 3.646501250021154*^9}}],

Cell[BoxData[
 RowBox[{"viewData", "@", "biographyXMLstring"}]], "Input",
 CellChangeTimes->{{3.6464989380678*^9, 3.646498950683838*^9}, {
  3.6464989842186623`*^9, 3.646499002857421*^9}, {3.646500065548368*^9, 
  3.6465001227074213`*^9}, {3.646500180757526*^9, 3.6465001881880836`*^9}, {
  3.646501246864779*^9, 3.64650125830296*^9}}],

Cell[TextData[{
 "Note that the file begins with a tag that indicates that the file is marked \
up with XML, ",
 StyleBox["?xml",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.6465004068757477`*^9, 3.646500550255843*^9}, {
   3.646500607124113*^9, 3.646500825494028*^9}, {3.646500986215063*^9, 
   3.646501023613852*^9}, {3.646501057381605*^9, 3.6465010899559183`*^9}, {
   3.64650115219423*^9, 3.646501220743013*^9}, 3.646754034087826*^9, {
   3.654166737130343*^9, 3.654166754681562*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bibliographic metadata", "Subsubsection",
 CellChangeTimes->{{3.6541667883838797`*^9, 3.654166791471299*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["work",
  FontSlant->"Italic"],
 " tag contains information about the book, mostly stored in attributes like ",
 StyleBox["author",
  FontSlant->"Italic"],
 ", ",
 StyleBox["editions",
  FontSlant->"Italic"],
 ", ",
 StyleBox["format",
  FontSlant->"Italic"],
 " and ",
 StyleBox["title",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.6465004068757477`*^9, 3.646500550255843*^9}, {
   3.646500607124113*^9, 3.646500825494028*^9}, {3.646500986215063*^9, 
   3.646501023613852*^9}, {3.646501057381605*^9, 3.6465010899559183`*^9}, {
   3.64650115219423*^9, 3.646501220743013*^9}, 3.646754034087826*^9, {
   3.654166737130343*^9, 3.654166759841291*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["author",
  FontSlant->"Italic"],
 " and ",
 StyleBox["authors ",
  FontSlant->"Italic"],
 "tags contain information about the authors, some of it redundant. "
}], "Text",
 CellChangeTimes->{{3.6465004068757477`*^9, 3.646500550255843*^9}, {
   3.646500607124113*^9, 3.646500825494028*^9}, {3.646500986215063*^9, 
   3.646501023613852*^9}, {3.646501057381605*^9, 3.6465010899559183`*^9}, {
   3.64650115219423*^9, 3.646501220743013*^9}, 3.646754034087826*^9, {
   3.654166737130343*^9, 3.654166764521249*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["lc",
  FontSlant->"Italic"],
 " and ",
 StyleBox["viaf",
  FontSlant->"Italic"],
 " attributes of the ",
 StyleBox["author",
  FontSlant->"Italic"],
 " tag hold Library of Congress and OCLC identifiers, respectively. We will \
make use of these later. "
}], "Text",
 CellChangeTimes->{{3.6465004068757477`*^9, 3.646500550255843*^9}, {
   3.646500607124113*^9, 3.646500825494028*^9}, {3.646500986215063*^9, 
   3.646501023613852*^9}, {3.646501057381605*^9, 3.6465010899559183`*^9}, {
   3.64650115219423*^9, 3.646501220743013*^9}, 3.646754034087826*^9, {
   3.654166737130343*^9, 3.654166769353128*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["ddc",
  FontSlant->"Italic"],
 " tag contains Dewey Decimal call numbers (576.82092). You would use these \
to look for a copy of the book in most North American public libraries. "
}], "Text",
 CellChangeTimes->{{3.6465004068757477`*^9, 3.646500550255843*^9}, {
   3.646500607124113*^9, 3.646500825494028*^9}, {3.646500986215063*^9, 
   3.646501023613852*^9}, {3.646501057381605*^9, 3.6465010899559183`*^9}, {
   3.64650115219423*^9, 3.646501220743013*^9}, 3.646754034087826*^9, {
   3.654166737130343*^9, 3.654166775032791*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["lcc",
  FontSlant->"Italic"],
 " tag contains Library of Congress call numbers (QH31.D2) which indicate \
where the book would be filed in most North American academic libraries."
}], "Text",
 CellChangeTimes->{{3.6465004068757477`*^9, 3.646500550255843*^9}, {
   3.646500607124113*^9, 3.646500825494028*^9}, {3.646500986215063*^9, 
   3.646501023613852*^9}, {3.646501057381605*^9, 3.6465010899559183`*^9}, {
   3.64650115219423*^9, 3.646501220743013*^9}, 3.646754034087826*^9, {
   3.654166737130343*^9, 3.654166775032791*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Scraping XML", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.655923795165399*^9, 3.65592379714072*^9}}],

Cell["\<\
Just as with HTML, we can extract information by using patterns to scrape the \
XML string. Here is how we would pull out the author names, birth years, LC \
and VIAF identifiers.\
\>", "Text",
 CellChangeTimes->{{3.646501268972185*^9, 3.646501349529909*^9}, {
  3.646504491699731*^9, 3.646504501924796*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"StringCases", "[", 
   RowBox[{"biographyXMLstring", ",", 
    RowBox[{
     RowBox[{"Shortest", "[", 
      RowBox[{
      "\"\<<author lc=\>\"", "~~", "lc__", "~~", "\"\<viaf=\>\"", "~~", 
       "viaf__", "~~", "\"\<>\>\"", "~~", "lname__", "~~", "\"\<\\n\>\"", "~~",
        "fname__", "~~", 
       RowBox[{"Longest", "[", 
        RowBox[{"byear", ":", 
         RowBox[{"DigitCharacter", ".."}]}], "]"}], "~~", "a__", "~~", 
       "\"\<</author>\>\""}], "]"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "lname", ",", "fname", ",", "\"\<b.\>\"", ",", "byear", ",", 
       "\"\<LC\>\"", ",", "lc", ",", "\"\<VIAF\>\"", ",", "viaf"}], "}"}]}]}],
    "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.646501359923332*^9, 3.64650151641938*^9}, {
  3.646501565336928*^9, 3.646501590577162*^9}, {3.646501636782123*^9, 
  3.646501720284307*^9}, {3.646501983690975*^9, 3.646502033816518*^9}, {
  3.646502069877919*^9, 3.646502107701775*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["RSS feeds", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.655924047460586*^9, 3.6559240494831257`*^9}}],

Cell[TextData[{
 "One case where XML scraping or parsing is very handy is in dealing with RSS \
feeds. RSS (Really Simple Syndication) is an XML format for storing \
information about frequently changed information on a website. A blog, for \
example, will typically have an RSS feed that you can subscribe to using a ",
 StyleBox["feed reader",
  FontSlant->"Italic"],
 ". When you check your feed reader, it contacts the site, checks to see if \
there is a blog post that you haven\[CloseCurlyQuote]t read, and, if so, \
downloads some information about that post. Many news sites, too, use RSS \
feeds for new stories; libraries often use them to advertise books that have \
recently been purchased; retailers use them for new product information, and \
so on."
}], "Text",
 CellChangeTimes->{{3.645982426818583*^9, 3.6459824416817427`*^9}, {
  3.646754229567937*^9, 3.646754461728479*^9}, {3.655924507961713*^9, 
  3.655924509033925*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["New York Times",
  FontSlant->"Italic"],
 " has RSS feeds for a variety of topics that are covered frequently in the \
newspaper. On July 15, 2015, I archived a copy of their RSS feed for Darwin \
to the Wayback Machine."
}], "Text",
 CellChangeTimes->{{3.6467544690383587`*^9, 3.646754552733117*^9}}],

Cell["The Darwin RSS feed link is", "Text",
 CellChangeTimes->{{3.6467545689314632`*^9, 3.646754574124276*^9}}],

Cell[TextData[ButtonBox["http://topics.nytimes.com/top/reference/timestopics/\
people/d/charles_robert_darwin/index.html?rss=1",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://topics.nytimes.com/top/reference/timestopics/people/d/charles_\
robert_darwin/index.html?rss=1"], None},
 ButtonNote->
  "http://topics.nytimes.com/top/reference/timestopics/people/d/charles_\
robert_darwin/index.html?rss=1"]], "Text",
 CellChangeTimes->{{3.6459795660918093`*^9, 3.645979580731347*^9}, {
  3.649251881932681*^9, 3.649251922624275*^9}, {3.68563798241875*^9, 
  3.685637982421667*^9}}],

Cell["and the link in the Wayback Machine is", "Text",
 CellChangeTimes->{{3.646754588762899*^9, 3.646754595067718*^9}}],

Cell[TextData[ButtonBox["https://web.archive.org/web/20150715200540/http://\
topics.nytimes.com/top/reference/timestopics/people/d/charles_robert_darwin/\
index.html?rss=1",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://web.archive.org/web/20150715200540/http://topics.nytimes.com/\
top/reference/timestopics/people/d/charles_robert_darwin/index.html?rss=1"], 
   None},
 ButtonNote->
  "https://web.archive.org/web/20150715200540/http://topics.nytimes.com/top/\
reference/timestopics/people/d/charles_robert_darwin/index.html?rss=1"]], \
"Text",
 CellChangeTimes->{{3.6459795561653433`*^9, 3.645979557340167*^9}, {
  3.649251881932954*^9, 3.6492519192564583`*^9}, {3.685638001636339*^9, 
  3.6856380016391897`*^9}}],

Cell[TextData[{
 "We can use this link to explore some of the things we can do with RSS. The ",
 StyleBox["Import",
  FontWeight->"Bold"],
 " command, for example, shows us which elements we can request."
}], "Text",
 CellChangeTimes->{{3.646754613417923*^9, 3.6467546818083982`*^9}}],

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\<https://web.archive.org/web/20150715200540/http://topics.nytimes.com/\
top/reference/timestopics/people/d/charles_robert_darwin/index.html?rss=1\>\"\
", ",", "\"\<Elements\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.644245174804775*^9, 3.644245202373472*^9}, {
  3.6442456068841753`*^9, 3.644245609138709*^9}, {3.644245657674511*^9, 
  3.644245658072338*^9}, {3.6442457050960283`*^9, 3.644245795859419*^9}, {
  3.644245881641251*^9, 3.644245885720326*^9}, {3.646754852625657*^9, 
  3.646754853707925*^9}}],

Cell[TextData[{
 "If we just want to read the feed (as we would with a feed reader), we can \
actually open it as a new ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook with the ",
 StyleBox["CreateDocument",
  FontWeight->"Bold"],
 " command."
}], "Text",
 CellChangeTimes->{{3.644246298697823*^9, 3.64424630837681*^9}, {
  3.646754817155604*^9, 3.646754840097142*^9}, {3.646754899143703*^9, 
  3.646754905792444*^9}}],

Cell[BoxData[
 RowBox[{"CreateDocument", "[", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://web.archive.org/web/20150715200540/http://topics.nytimes.com/\
top/reference/timestopics/people/d/charles_robert_darwin/index.html?rss=1\>\"\
", ",", "\"\<RSS\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.644245174804775*^9, 3.644245202373472*^9}, {
  3.6442456068841753`*^9, 3.644245609138709*^9}, {3.644245657674511*^9, 
  3.644245658072338*^9}, {3.6442457050960283`*^9, 3.644245795859419*^9}, {
  3.644245881641251*^9, 3.644245923743898*^9}, {3.64424598934195*^9, 
  3.64424599495715*^9}, {3.644246038060594*^9, 3.644246040578937*^9}, {
  3.644246109730301*^9, 3.644246111573037*^9}, {3.644246181135355*^9, 
  3.64424618151777*^9}, {3.644246231141675*^9, 3.644246233891972*^9}, {
  3.646754862417383*^9, 3.64675486440349*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Cleaning HTML markup from RSS feeds", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.655924139537215*^9, 3.6559241441997757`*^9}}],

Cell["\<\
If we want to scrape the RSS feed, we can import it as a string.\
\>", "Text",
 CellChangeTimes->{{3.646754911766528*^9, 3.646754960854622*^9}, {
  3.6559241606306763`*^9, 3.6559241612711573`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nytDarwinSource", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://web.archive.org/web/20150715200540/http://topics.nytimes.com/\
top/reference/timestopics/people/d/charles_robert_darwin/index.html?rss=1\>\"\
", ",", "\"\<Source\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.644245174804775*^9, 3.644245202373472*^9}, {
   3.6442456068841753`*^9, 3.644245609138709*^9}, {3.644245657674511*^9, 
   3.644245658072338*^9}, {3.6442457050960283`*^9, 3.644245795859419*^9}, {
   3.6442464048069763`*^9, 3.6442464108855963`*^9}, 3.646754980640674*^9}],

Cell[BoxData[
 RowBox[{"Head", "[", "nytDarwinSource", "]"}]], "Input",
 CellChangeTimes->{{3.644246511538611*^9, 3.644246514826828*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["StringCases",
  FontWeight->"Bold"],
 " command lets us pull out individual entries."
}], "Text",
 CellChangeTimes->{{3.646754993059388*^9, 3.646755005876936*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nytDarwinItems", "=", 
   RowBox[{"StringCases", "[", 
    RowBox[{"nytDarwinSource", ",", 
     RowBox[{"Shortest", "[", 
      RowBox[{"\"\<<item>\>\"", "~~", "__", "~~", "\"\<</item>\>\""}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6442465169881067`*^9, 3.644246602007024*^9}, {
  3.6442470413208847`*^9, 3.64424713500463*^9}, {3.644247171235371*^9, 
  3.644247178867071*^9}}],

Cell[BoxData[
 RowBox[{"nytDarwinItems", "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.644247181784594*^9, 3.644247185387123*^9}}],

Cell["\<\
Here is a little function to replace the HTML codes for ampersands and angle \
brackets with characters, delete everything in angle brackets, then replace \
all other HTML codes with blank space.\
\>", "Text",
 CellChangeTimes->{{3.644251621772883*^9, 3.644251644955823*^9}, {
  3.644251697466607*^9, 3.644251704033506*^9}, {3.644252099027843*^9, 
  3.644252108563099*^9}, {3.646755016947719*^9, 3.646755023348422*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanHTMLMarkup", "[", "str_", "]"}], ":=", "\[IndentingNewLine]", 
  
  RowBox[{"StringReplace", "[", 
   RowBox[{
    RowBox[{"StringDelete", "[", 
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{"str", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<&amp;\>\"", "\[Rule]", "\"\<&\>\""}], ",", 
          RowBox[{"\"\<&lt;\>\"", "\[Rule]", "\"\<<\>\""}], ",", 
          RowBox[{"\"\<&gt;\>\"", "\[Rule]", "\"\<>\>\""}]}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"Shortest", "[", 
       RowBox[{"\"\<<\>\"", "~~", "__", "~~", "\"\<>\>\""}], "]"}]}], "]"}], 
    ",", 
    RowBox[{
     RowBox[{"Shortest", "[", 
      RowBox[{"\"\<&\>\"", "~~", "__", "~~", "\"\<;\>\""}], "]"}], "\[Rule]", 
     "\"\< \>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6442516488896847`*^9, 3.644251811278289*^9}, {
  3.64425211446084*^9, 3.644252127092247*^9}}],

Cell["\<\
When we clean out the HTML markup, we see that it makes the remaining text \
much easier to read.\
\>", "Text",
 CellChangeTimes->{{3.646755059529255*^9, 3.646755077402326*^9}}],

Cell[BoxData[
 RowBox[{"cleanHTMLMarkup", "[", 
  "\"\<&lt;a \
href=\\\"http://www.nytimes.com/2015/05/16/opinion/it-is-in-fact-rocket-\
science.html?partner=rssnyt&amp;emc=rss\\\"&gt;&lt;img \
src=\\\"http://static01.nyt.com/images/2015/05/16/opinion/16Mlodinow/\
16Mlodinow-thumbStandard.jpg\\\" border=\\\"0\\\" height=\\\"75\\\" \
width=\\\"75\\\" hspace=\\\"4\\\" align=\\\"left\\\"/&gt;&lt;/a&gt;Why do we \
reduce great discoveries to epiphany myths?\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6442518238686037`*^9, 3.644251896204311*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Pretty printing RSS feeds", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.655924194271154*^9, 3.655924197565761*^9}}],

Cell["\<\
Here is a function that scrapes information from the RSS feed and displays it \
in a format of our choosing. Note that we also include a link that will \
automatically open in our web browser if we want to read the full story. \
Since RSS feeds deal with material that changes frequently, there is no \
guarantee that links will continue to work indefinitely (especially since we \
archived the feed on the Wayback Machine). If you are monitoring a feed for \
up-to-date news, however, this is nice to have.\
\>", "Text",
 CellChangeTimes->{{3.6467550918571*^9, 3.646755137807987*^9}, {
  3.6467551725181*^9, 3.646755209213616*^9}, {3.6467554950034933`*^9, 
  3.64675553754603*^9}, {3.646755586992381*^9, 3.646755613015396*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"prettyPrintItem", "[", "it_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "title", ",", "author", ",", "pubdate", ",", "desc", ",", "link"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"title", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"it", ",", 
        RowBox[{
         RowBox[{"Shortest", "[", 
          RowBox[{"\"\<<title>\>\"", "~~", "t__", "~~", "\"\<</title>\>\""}], 
          "]"}], "\[Rule]", "t"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"author", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"it", ",", 
        RowBox[{
         RowBox[{"Shortest", "[", 
          RowBox[{
          "\"\<<author>\>\"", "~~", "a__", "~~", "\"\<</author>\>\""}], "]"}],
          "\[Rule]", "a"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pubdate", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"it", ",", 
        RowBox[{
         RowBox[{"Shortest", "[", 
          RowBox[{
          "\"\<<pubDate>\>\"", "~~", "pd__", "~~", "\"\<</pubDate>\>\""}], 
          "]"}], "\[Rule]", "pd"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"desc", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"it", ",", 
        RowBox[{"Shortest", "[", 
         RowBox[{
         "\"\<<description>\>\"", "~~", "__", "~~", 
          "\"\<</description>\>\""}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"link", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"it", ",", 
        RowBox[{
         RowBox[{"Shortest", "[", 
          RowBox[{"\"\<<link>\>\"", "~~", "l__", "~~", "\"\<</link>\>\""}], 
          "]"}], "\[Rule]", "l"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Column", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"title", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Text", "@", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"cleanHTMLMarkup", "@", 
              RowBox[{"First", "@", "title"}]}], ",", "Bold"}], "]"}]}]}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"author", "\[NotEqual]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"First", "@", "author"}], ",", "\"\<Anon\>\""}], "]"}], 
          "<>", "\"\<, \>\"", "<>", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"pubdate", "\[NotEqual]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"First", "@", "pubdate"}], ",", "\"\<nd\>\""}], "]"}]}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Text", "@", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"cleanHTMLMarkup", "@", 
            RowBox[{"First", "@", "desc"}]}], ",", "Medium"}], "]"}]}], ",", 
        RowBox[{"Hyperlink", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Read in web browser\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"Medium", ",", 
              RowBox[{"FontFamily", "\[Rule]", "Times"}]}], "}"}]}], "]"}], 
          ",", "link"}], "]"}], ",", "\[IndentingNewLine]", "\"\<\>\""}], 
       "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.644247202490703*^9, 3.644247256703471*^9}, {
   3.644247307229732*^9, 3.644247470664341*^9}, {3.644247508479656*^9, 
   3.644247516742668*^9}, {3.6442476463877907`*^9, 3.644247831851198*^9}, {
   3.6442483464343567`*^9, 3.64424835830437*^9}, {3.644248440895021*^9, 
   3.6442485512986393`*^9}, 3.644248632321176*^9, {3.644249153597777*^9, 
   3.644249306502923*^9}, {3.644249356806676*^9, 3.644249397715661*^9}, {
   3.644249447291212*^9, 3.64424944973847*^9}, {3.644249746218458*^9, 
   3.644249831005691*^9}, {3.6442498658683033`*^9, 3.644249872388281*^9}, {
   3.644249907713953*^9, 3.644250013671999*^9}, {3.644250047925692*^9, 
   3.644250081979394*^9}, {3.6442501554012823`*^9, 3.6442501591288347`*^9}, {
   3.6442502418651257`*^9, 3.6442502495018806`*^9}, {3.644251936580783*^9, 
   3.644251994624522*^9}}],

Cell[BoxData[
 RowBox[{"prettyPrintItem", "[", 
  RowBox[{
  "nytDarwinItems", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6442472744877567`*^9, 3.644247282394176*^9}, {
   3.6442483684163017`*^9, 3.644248395152088*^9}, 3.644248585865098*^9, {
   3.6442495790071993`*^9, 3.6442496026597443`*^9}, {3.644252057790866*^9, 
   3.644252066397085*^9}, 3.646755695050887*^9}],

Cell[TextData[{
 "This function gets all of the items in the feed, formats them, and displays \
them in a version of the ",
 StyleBox["viewData",
  FontSlant->"Italic"],
 " window."
}], "Text",
 CellChangeTimes->{{3.646755619909247*^9, 3.646755661749384*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"prettyPrintItems", "[", "items_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Framed", "[", 
   RowBox[{"Pane", "[", 
    RowBox[{
     RowBox[{"Column", "[", 
      RowBox[{"prettyPrintItem", "/@", "items"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "200"}], "}"}], ",", 
     RowBox[{"Scrollbars", "\[Rule]", "True"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.644249464358556*^9, 3.6442495012071466`*^9}, {
  3.644250123433805*^9, 3.644250130738575*^9}}],

Cell[BoxData[
 RowBox[{"prettyPrintItems", "[", "nytDarwinItems", "]"}]], "Input",
 CellChangeTimes->{{3.644249514328178*^9, 3.64424951628649*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Scraping links from RSS feeds", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.6559242447489157`*^9, 3.6559242485636873`*^9}}],

Cell["\<\
We can also scrape specific information from an RSS feed. Here are all of the \
links\
\>", "Text",
 CellChangeTimes->{{3.644250905918148*^9, 3.6442509084215727`*^9}, {
  3.646755708796172*^9, 3.64675572397143*^9}}],

Cell[BoxData[
 RowBox[{"StringCases", "[", 
  RowBox[{"nytDarwinSource", ",", 
   RowBox[{"Shortest", "[", 
    RowBox[{"\"\<<link>\>\"", "~~", "__", "~~", "\"\<</link>\>\""}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.644250912200633*^9, 3.6442509156697474`*^9}}],

Cell["\<\
We can grab one of the links and display the text in a window.\
\>", "Text",
 CellChangeTimes->{{3.6442508757671843`*^9, 3.644250878478552*^9}, {
  3.646755733104949*^9, 3.646755741994611*^9}, {3.646755773504813*^9, 
  3.646755774377492*^9}}],

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{"Pane", "[", 
   RowBox[{
    RowBox[{"Text", "@", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"StringRiffle", "[", 
        RowBox[{"cleanHTMLMarkup", "/@", 
         RowBox[{"StringCases", "[", 
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{
            "\"\<http://opinionator.blogs.nytimes.com/2014/11/30/evolution-\
and-the-american-myth-of-the-individual/?partner=rssnyt&amp;emc=rss\>\"", 
             ",", "\"\<Source\>\""}], "]"}], ",", 
           RowBox[{"Shortest", "[", 
            RowBox[{
            "\"\<<p class=\\\"story-body-text\>\"", "~~", "__", "~~", 
             "\"\<</p>\>\""}], "]"}]}], "]"}]}], "]"}], ",", "Medium"}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "200"}], "}"}], ",", 
    RowBox[{"Scrollbars", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6442503128207273`*^9, 3.6442503935840197`*^9}, {
   3.644250500533203*^9, 3.644250549578692*^9}, {3.644250683831859*^9, 
   3.6442507115903893`*^9}, {3.644250751660411*^9, 3.644250822449583*^9}, 
   3.644250941009295*^9, {3.644252203354165*^9, 3.64425221796241*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Optional: Symbolic XML", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.6559238304117937`*^9, 3.655923834059415*^9}, {3.655923866954607*^9, 
  3.65592386855408*^9}, {3.65592443918132*^9, 3.655924440692629*^9}}],

Cell[TextData[{
 "Rather than scraping XML, it sometimes makes more sense to ",
 StyleBox["parse",
  FontSlant->"Italic"],
 " it, to break it down in a systematic way. When you import XML into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " it is converted to a form called \[OpenCurlyQuote]symbolic XML\
\[CloseCurlyQuote], which is native to the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " language. In symbolic XML, the whole file is represented by an ",
 StyleBox["XMLObject",
  FontWeight->"Bold"],
 ", and each tag by an ",
 StyleBox["XMLElement",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.646502118844018*^9, 3.646502129012721*^9}, {
  3.646502176754566*^9, 3.6465022955025787`*^9}, {3.646502329277172*^9, 
  3.646502348251305*^9}, {3.646502419273574*^9, 3.646502451672763*^9}, {
  3.646504521602845*^9, 3.646504522004321*^9}}],

Cell["A regular XML expression like", "Text",
 CellChangeTimes->{{3.6465024692624807`*^9, 3.646502476887744*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"<", 
   RowBox[{"tag", " ", "attribute"}]}], "=", 
  RowBox[{"\"\<value\>\"", ">", "data", "<", 
   RowBox[{"/", "tag"}], ">"}]}]], "DisplayFormula",
 CellChangeTimes->{{3.646502482478163*^9, 3.646502510590403*^9}}],

Cell["Is converted to a symbolic XML expression of the form", "Text",
 CellChangeTimes->{{3.646502513756929*^9, 3.6465025356776123`*^9}}],

Cell[BoxData[
 RowBox[{"XMLElement", "[", 
  RowBox[{"\"\<tag\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<attribute\>\"", "\[Rule]", "\"\<value\>\""}], "}"}], ",", 
   RowBox[{"{", "\"\<data\>\"", "}"}]}], "]"}]], "DisplayFormula",
 CellChangeTimes->{{3.646502542417104*^9, 3.64650254242627*^9}, {
  3.646502585949904*^9, 3.646502619248948*^9}, {3.6465027756522007`*^9, 
  3.646502788682619*^9}}],

Cell["\<\
Here is the record for Desmond and Moore\[CloseCurlyQuote]s Darwin biography, \
represented in symbolic XML.\
\>", "Text",
 CellChangeTimes->{{3.64650262713764*^9, 3.646502665544847*^9}, {
  3.646504542017702*^9, 3.646504545203374*^9}}],

Cell[BoxData[
 RowBox[{"biographySymbolicXML", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<http://classify.oclc.org/classify2/Classify?isbn=0393311503&summary=\
true\>\"", ",", "\"\<XML\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.644253310020103*^9, 3.6442533662146597`*^9}, {
  3.644253429837245*^9, 3.644253464819854*^9}, {3.6442534989627953`*^9, 
  3.644253515066519*^9}, {3.64425357512884*^9, 3.644253578827321*^9}, {
  3.646502375979148*^9, 3.6465023862133713`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Optional: Parsing XML", "Section",
 CellChangeTimes->{{3.647716384690867*^9, 3.6477163853144817`*^9}, {
  3.6559238304117937`*^9, 3.655923834059415*^9}, {3.655924444211804*^9, 
  3.655924445828244*^9}}],

Cell[TextData[{
 "Symbolic XML takes a bit of getting used to, but it is actually pretty easy \
to extract the information that you want. Suppose you want to pull out the \
same information that we scraped above. Go into the above output and copy a \
sample ",
 StyleBox["XMLElement",
  FontWeight->"Bold"],
 ", then paste it into the notebook:"
}], "Text",
 CellChangeTimes->{{3.646502674151801*^9, 3.646502723670669*^9}, {
  3.6465028627048073`*^9, 3.6465029468862247`*^9}, {3.6465045570734873`*^9, 
  3.646504567930299*^9}}],

Cell[BoxData[
 RowBox[{"XMLElement", "[", 
  RowBox[{"\"\<author\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<lc\>\"", "\[Rule]", "\"\<n78041786\>\""}], ",", 
     RowBox[{"\"\<viaf\>\"", "\[Rule]", "\"\<93867795\>\""}]}], "}"}], ",", 
   RowBox[{"{", "\"\<Moore, James R. 1947- [Author]\>\"", "}"}]}], 
  "]"}]], "Input"],

Cell[TextData[{
 "We are going to use this ",
 StyleBox["XMLElement",
  FontWeight->"Bold"],
 " as the basis for a pattern that can extract all author details from the \
XML. Wrap the expression in a ",
 StyleBox["Cases",
  FontWeight->"Bold"],
 " command. (We need to include ",
 StyleBox["Infinity",
  FontSlant->"Italic"],
 " as the level specification for our command because the information is \
nested deeply in the ",
 StyleBox["XMLObject",
  FontWeight->"Bold"],
 ")."
}], "Text",
 CellChangeTimes->{{3.646503011472329*^9, 3.646503110424127*^9}, {
  3.64675414816183*^9, 3.64675415233136*^9}}],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"biographySymbolicXML", ",", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<author\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<lc\>\"", "\[Rule]", "\"\<n78041786\>\""}], ",", 
       RowBox[{"\"\<viaf\>\"", "\[Rule]", "\"\<93867795\>\""}]}], "}"}], ",", 
     
     RowBox[{"{", "\"\<Moore, James R. 1947- [Author]\>\"", "}"}]}], "]"}], 
   ",", "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{{3.646502974785453*^9, 3.6465029946054087`*^9}, {
  3.646503063616188*^9, 3.646503081641398*^9}}],

Cell[TextData[{
 "Next we have to replace each piece of specific information with a named \
pattern. That way, instead of matching only the record for James Moore, our \
",
 StyleBox["Cases",
  FontWeight->"Bold"],
 " statement will match all authors."
}], "Text",
 CellChangeTimes->{{3.64650306789627*^9, 3.6465030736575613`*^9}, {
  3.646503121398243*^9, 3.6465031484067287`*^9}, {3.646754181776733*^9, 
  3.646754199585635*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cases", "[", 
   RowBox[{"biographySymbolicXML", ",", 
    RowBox[{
     RowBox[{"XMLElement", "[", 
      RowBox[{"\"\<author\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<lc\>\"", "\[Rule]", "lc_"}], ",", 
         RowBox[{"\"\<viaf\>\"", "\[Rule]", "viaf_"}]}], "}"}], ",", 
       RowBox[{"{", "a_", "}"}]}], "]"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "a", ",", "\"\<LC\>\"", ",", "lc", ",", "\"\<VIAF\>\"", ",", "viaf"}], 
      "}"}]}], ",", "Infinity"}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.646502974785453*^9, 3.6465029946054087`*^9}, {
  3.646503063616188*^9, 3.646503081641398*^9}, {3.6465031586461163`*^9, 
  3.646503218092248*^9}}],

Cell["\<\
Here are a few more examples of pulling information from symbolic XML. The \
title of the work\
\>", "Text",
 CellChangeTimes->{{3.646503443443057*^9, 3.646503450731496*^9}, {
  3.646504604207385*^9, 3.646504613488633*^9}}],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"biographySymbolicXML", ",", 
   RowBox[{
    RowBox[{"XMLElement", "[", 
     RowBox[{"\"\<work\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"__", ",", 
        RowBox[{"\"\<title\>\"", "\[Rule]", "title_"}]}], "}"}], ",", 
      RowBox[{"{", "__", "}"}]}], "]"}], "\[Rule]", "title"}], ",", 
   "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{{3.646503453463213*^9, 3.6465035502385187`*^9}, {
  3.6465035868931437`*^9, 3.6465035959021673`*^9}}],

Cell["The number of editions", "Text",
 CellChangeTimes->{{3.6465036077480993`*^9, 3.646503611517597*^9}}],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"biographySymbolicXML", ",", 
   RowBox[{
    RowBox[{"XMLElement", "[", 
     RowBox[{"\"\<work\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"__", ",", 
        RowBox[{"\"\<editions\>\"", "\[Rule]", "eds_"}], ",", "__"}], "}"}], 
      ",", 
      RowBox[{"{", "__", "}"}]}], "]"}], "\[Rule]", "eds"}], ",", 
   "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{{3.646503453463213*^9, 3.6465035502385187`*^9}, {
  3.6465035868931437`*^9, 3.6465035959021673`*^9}, {3.6465036383560667`*^9, 
  3.646503646469068*^9}}],

Cell["The most frequently used Library of Congress call number", "Text",
 CellChangeTimes->{{3.64650365017924*^9, 3.646503655987916*^9}, {
  3.646503727688821*^9, 3.6465037334394293`*^9}}],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"biographySymbolicXML", ",", 
   RowBox[{
    RowBox[{"XMLElement", "[", 
     RowBox[{"\"\<lcc\>\"", ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"XMLElement", "[", 
         RowBox[{"\"\<mostPopular\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"__", ",", 
            RowBox[{"\"\<sfa\>\"", "\[Rule]", "lcc_"}]}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}], ",", "__"}], "}"}]}], "]"}], "\[Rule]",
     "lcc"}], ",", "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{{3.646503453463213*^9, 3.6465035502385187`*^9}, {
  3.6465035868931437`*^9, 3.6465035959021673`*^9}, {3.6465036383560667`*^9, 
  3.646503646469068*^9}, {3.646503746800212*^9, 3.6465039002283087`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Upload your notebook", "Section",
 CellChangeTimes->{{3.649950784924818*^9, 3.649950788859275*^9}}],

Cell["\<\
Don\[CloseCurlyQuote]t forget to upload a copy of your notebook for this \
class to the OWL Site for the course\
\>", "Text",
 CellChangeTimes->{{3.649950792779258*^9, 3.649950818634288*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1356, 1146},
WindowMargins->{{Automatic, 555}, {Automatic, 10}},
TaggingRules->{"SlideShow" -> True},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4383, 98, 75, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[5750, 147, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[6789, 175, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[12836, 344, 64, 1, 92, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[16151, 439, 64, 1, 92, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[22498, 626, 64, 1, 92, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[27046, 744, 64, 1, 92, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[34104, 933, 64, 1, 92, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[35709, 978, 64, 1, 92, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[40965, 1104, 64, 1, 92, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[45155, 1217, 64, 1, 92, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[51812, 1383, 64, 1, 92, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[54076, 1447, 64, 1, 92, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[56988, 1527, 64, 1, 92, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[62946, 1695, 64, 1, 92, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 63754, 1724}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4383, 98, 75, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[4966, 122, 401, 9, 183, "Title"],
Cell[5370, 133, 343, 9, 99, "Subtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5750, 147, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[5839, 152, 95, 1, 80, "Section"],
Cell[5937, 155, 803, 14, 85, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6789, 175, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[6878, 180, 141, 2, 80, "Section"],
Cell[7022, 184, 381, 9, 66, "Input"],
Cell[CellGroupData[{
Cell[7428, 197, 123, 1, 54, "Subsection"],
Cell[7554, 200, 228, 4, 37, "Text"],
Cell[7785, 206, 1420, 37, 66, "Input"],
Cell[9208, 245, 1834, 46, 144, "Input"],
Cell[11045, 293, 1730, 44, 196, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12836, 344, 64, 1, 92, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[12925, 349, 152, 2, 100, "Section"],
Cell[13080, 353, 1441, 44, 109, "Text"],
Cell[14524, 399, 298, 6, 48, "Input"],
Cell[14825, 407, 350, 8, 82, "Input"],
Cell[15178, 417, 333, 5, 48, "Input"],
Cell[15514, 424, 588, 9, 76, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16151, 439, 64, 1, 92, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[16240, 444, 165, 2, 100, "Section"],
Cell[16408, 448, 251, 5, 46, "Text"],
Cell[16662, 455, 407, 9, 46, "Text"],
Cell[17072, 466, 168, 3, 48, "Input"],
Cell[CellGroupData[{
Cell[17265, 473, 110, 1, 67, "Subsection"],
Cell[17378, 476, 635, 10, 76, "Text"],
Cell[CellGroupData[{
Cell[18038, 490, 102, 1, 53, "Subsubsection"],
Cell[18143, 493, 179, 4, 46, "Text"],
Cell[18325, 499, 279, 6, 55, "Code",
 Evaluatable->False],
Cell[18607, 507, 207, 6, 46, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18851, 518, 104, 1, 53, "Subsubsection"],
Cell[18958, 521, 297, 5, 76, "Text"],
Cell[19258, 528, 326, 6, 55, "Code",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[19621, 539, 107, 1, 53, "Subsubsection"],
Cell[19731, 542, 158, 3, 46, "Text"],
Cell[19892, 547, 380, 8, 55, "Code",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[20309, 560, 97, 1, 53, "Subsubsection"],
Cell[20409, 563, 185, 2, 46, "Text"],
Cell[20597, 567, 370, 7, 55, "Code",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[21004, 579, 101, 1, 53, "Subsubsection"],
Cell[21108, 582, 240, 5, 46, "Text"],
Cell[21351, 589, 396, 8, 55, "Code",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[21784, 602, 93, 1, 53, "Subsubsection"],
Cell[21880, 605, 154, 3, 46, "Text"],
Cell[22037, 610, 388, 8, 55, "Code",
 Evaluatable->False]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22498, 626, 64, 1, 92, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[22587, 631, 174, 2, 100, "Section"],
Cell[CellGroupData[{
Cell[22786, 637, 129, 1, 53, "Subsubsection"],
Cell[22918, 640, 221, 4, 46, "Text"],
Cell[23142, 646, 393, 9, 48, "Input"],
Cell[23538, 657, 441, 7, 46, "Text"],
Cell[23982, 666, 352, 7, 55, "Code",
 Evaluatable->False],
Cell[24337, 675, 175, 6, 46, "Text"],
Cell[24515, 683, 523, 11, 82, "Input"],
Cell[25041, 696, 467, 8, 46, "Text"],
Cell[25511, 706, 742, 16, 115, "Input"],
Cell[26256, 724, 729, 13, 136, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27046, 744, 64, 1, 92, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[27135, 749, 157, 2, 100, "Section"],
Cell[27295, 753, 753, 13, 106, "Text"],
Cell[CellGroupData[{
Cell[28073, 770, 167, 2, 53, "Subsubsection"],
Cell[28243, 774, 630, 10, 106, "Text"],
Cell[28876, 786, 317, 6, 48, "Input"],
Cell[29196, 794, 384, 9, 46, "Text"],
Cell[29583, 805, 432, 11, 82, "Input"],
Cell[30018, 818, 335, 5, 48, "Input"],
Cell[30356, 825, 507, 11, 46, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30900, 841, 115, 1, 53, "Subsubsection"],
Cell[31018, 844, 702, 22, 46, "Text"],
Cell[31723, 868, 543, 13, 46, "Text"],
Cell[32269, 883, 638, 17, 46, "Text"],
Cell[32910, 902, 566, 11, 46, "Text"],
Cell[33479, 915, 564, 11, 46, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34104, 933, 64, 1, 92, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[34193, 938, 147, 2, 100, "Section"],
Cell[34343, 942, 318, 6, 76, "Text"],
Cell[34664, 950, 996, 22, 147, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35709, 978, 64, 1, 92, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[35798, 983, 147, 2, 100, "Section"],
Cell[35948, 987, 942, 16, 165, "Text"],
Cell[36893, 1005, 337, 8, 76, "Text"],
Cell[37233, 1015, 111, 1, 46, "Text"],
Cell[37347, 1018, 584, 11, 46, "Text"],
Cell[37934, 1031, 120, 1, 46, "Text"],
Cell[38057, 1034, 726, 14, 46, "Text"],
Cell[38786, 1050, 284, 6, 46, "Text"],
Cell[39073, 1058, 565, 10, 115, "Input"],
Cell[39641, 1070, 434, 12, 76, "Text"],
Cell[40078, 1084, 838, 14, 147, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40965, 1104, 64, 1, 92, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[41054, 1109, 173, 2, 100, "Section"],
Cell[41230, 1113, 207, 4, 46, "Text"],
Cell[41440, 1119, 603, 11, 147, "Input"],
Cell[42046, 1132, 137, 2, 48, "Input"],
Cell[42186, 1136, 199, 6, 46, "Text"],
Cell[42388, 1144, 437, 10, 48, "Input"],
Cell[42828, 1156, 175, 3, 48, "Input"],
Cell[43006, 1161, 429, 7, 76, "Text"],
Cell[43438, 1170, 927, 24, 115, "Input"],
Cell[44368, 1196, 187, 4, 46, "Text"],
Cell[44558, 1202, 548, 9, 212, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45155, 1217, 64, 1, 92, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[45244, 1222, 161, 2, 100, "Section"],
Cell[45408, 1226, 738, 11, 136, "Text"],
Cell[46149, 1239, 4244, 100, 407, "Input"],
Cell[50396, 1341, 422, 8, 48, "Input"],
Cell[50821, 1351, 259, 7, 46, "Text"],
Cell[51083, 1360, 530, 13, 82, "Input"],
Cell[51616, 1375, 147, 2, 48, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51812, 1383, 64, 1, 92, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[51901, 1388, 169, 2, 100, "Section"],
Cell[52073, 1392, 225, 5, 46, "Text"],
Cell[52301, 1399, 273, 6, 48, "Input"],
Cell[52577, 1407, 252, 5, 46, "Text"],
Cell[52832, 1414, 1195, 27, 375, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54076, 1447, 64, 1, 92, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[54165, 1452, 253, 3, 100, "Section"],
Cell[54421, 1457, 872, 22, 106, "Text"],
Cell[55296, 1481, 113, 1, 46, "Text"],
Cell[55412, 1484, 250, 6, 41, "DisplayFormula"],
Cell[55665, 1492, 137, 1, 46, "Text"],
Cell[55805, 1495, 398, 8, 41, "DisplayFormula"],
Cell[56206, 1505, 246, 5, 46, "Text"],
Cell[56455, 1512, 484, 9, 48, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56988, 1527, 64, 1, 92, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[57077, 1532, 208, 3, 100, "Section"],
Cell[57288, 1537, 527, 11, 76, "Text"],
Cell[57818, 1550, 337, 8, 48, "Input"],
Cell[58158, 1560, 601, 18, 76, "Text"],
Cell[58762, 1580, 565, 13, 82, "Input"],
Cell[59330, 1595, 431, 10, 76, "Text"],
Cell[59764, 1607, 744, 18, 82, "Input"],
Cell[60511, 1627, 233, 5, 46, "Text"],
Cell[60747, 1634, 498, 12, 48, "Input"],
Cell[61248, 1648, 106, 1, 46, "Text"],
Cell[61357, 1651, 566, 14, 48, "Input"],
Cell[61926, 1667, 188, 2, 46, "Text"],
Cell[62117, 1671, 780, 18, 82, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62946, 1695, 64, 1, 92, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[63035, 1700, 105, 1, 100, "Section"],
Cell[63143, 1703, 201, 4, 46, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

