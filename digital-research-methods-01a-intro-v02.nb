(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    487927,      10295]
NotebookOptionsPosition[    472758,       9846]
NotebookOutlinePosition[    475411,       9916]
CellTagsIndexPosition[    475331,       9911]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[2, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 
         0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {
         2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 CellChangeTimes->{3.647332382355485*^9},
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell["\<\
Digital Research Methods 01A:
Introduction to Digital History\
\>", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.647331852839075*^9, 3.647331861295168*^9}, {
   3.647331922221755*^9, 3.647331924532915*^9}, {3.6473325094404078`*^9, 
   3.647332513510417*^9}, {3.647332611220435*^9, 3.6473326270001307`*^9}, {
   3.650733319794393*^9, 3.6507333467942753`*^9}}],

Cell[TextData[{
 "William J Turkel, ",
 StyleBox["wturkel@uwo.ca",
  FontSlant->"Italic",
  FontColor->RGBColor[
   0.396078431372549, 0.596078431372549, 0.796078431372549]],
 "\nHistory 2816 / Digital Humanities 2130 / History 9877"
}], "Subtitle",
 CellChangeTimes->{{3.647331955723979*^9, 3.6473319708190517`*^9}, 
   3.647332103720562*^9, 3.6473325174866047`*^9, 3.647332637899835*^9, {
   3.650733312580236*^9, 3.650733315066389*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebooks"
}], "Title",
 CellChangeTimes->{{3.6507088092630787`*^9, 3.650708839725322*^9}, {
  3.6810600817893744`*^9, 3.6810600875244713`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Getting started with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " "
}], "Section",
 CellChangeTimes->{{3.650733101651307*^9, 3.650733107906396*^9}, 
   3.6507331496171293`*^9, {3.681060132955881*^9, 3.681060138530574*^9}}],

Cell[CellGroupData[{

Cell["Calling WolframAlpha", "Subsection",
 CellChangeTimes->{{3.681060875433539*^9, 3.6810608839442167`*^9}}],

Cell["\<\
You can request information directly into your notebook by querying the \
knowledge engine WolframAlpha. There are two ways to do this.  \
\>", "Text",
 CellChangeTimes->{{3.6810608869035807`*^9, 3.681060977796315*^9}, {
   3.681061020347612*^9, 3.6810610586334047`*^9}, 3.68106110076936*^9, 
   3.681061368000348*^9}],

Cell["\<\
If you want to ask for something specific, start your input line with = and \
type in your query, e.g., \[OpenCurlyDoubleQuote]picture of hammerhead shark\
\[CloseCurlyDoubleQuote]. This is the result:\
\>", "Text",
 CellChangeTimes->{{3.681061071216852*^9, 3.68106109182414*^9}, {
   3.6810611513099947`*^9, 3.681061222747499*^9}, 3.681061294497645*^9}],

Cell["", "WolframAlphaShort",
 CellChangeTimes->{3.6810612763412533`*^9}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "picture of hammerhead shark", 
   Typeset`newq$$ = "picture of hammerhead shark", Typeset`chosen$$ = 
   "Entity[\"Species\", \"Family:Sphyrnidae\"][EntityProperty[\"Species\", \
\"Image\"]]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse[
              "picture of hammerhead shark", 
               Defer[
                Entity["Species", "Family:Sphyrnidae"][
                 EntityProperty["Species", "Image"]]], "Fast parse"]; 
             Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13., {3., 11.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13., {3., 11.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "picture of hammerhead shark", 
                  Defer[
                   Entity["Species", "Family:Sphyrnidae"][
                    EntityProperty["Species", "Image"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  
                  TemplateBox[{
                   "\"hammerhead sharks\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"Species\"", ",", "\"Family:Sphyrnidae\""}], 
                    "]"}],"\"Entity[\\\"Species\\\", \
\\\"Family:Sphyrnidae\\\"]\"","\"species specification\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Species\"", ",", "\"Image\""}], "]"}],
                    "\"EntityProperty[\\\"Species\\\", \\\"Image\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  
                  TemplateBox[{
                   "\"hammerhead sharks\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"Species\"", ",", "\"Family:Sphyrnidae\""}], 
                    "]"}],"\"Entity[\\\"Species\\\", \
\\\"Family:Sphyrnidae\\\"]\"","\"species specification\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Species\"", ",", "\"Image\""}], "]"}],
                    "\"EntityProperty[\\\"Species\\\", \\\"Image\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    TemplateBox[{"\"hammerhead sharks\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Species\"", ",", "\"Family:Sphyrnidae\""}], 
                    "]"}], "\"Entity[\\\"Species\\\", \\\"Family:Sphyrnidae\\\
\"]\"", "\"species specification\""}, "Entity"], "[", 
                    TemplateBox[{"\"image\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Species\"", ",", "\"Image\""}], "]"}], 
                    "\"EntityProperty[\\\"Species\\\", \\\"Image\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[
                  "picture of hammerhead shark", 
                   Defer[
                    Entity["Species", "Family:Sphyrnidae"][
                    EntityProperty["Species", "Image"]]], "Fast parse"]; 
                 Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "picture of hammerhead shark", 
                    Defer[
                    Entity["Species", "Family:Sphyrnidae"][
                    EntityProperty["Species", "Image"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    
                    TemplateBox[{
                    "\"hammerhead sharks\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"Species\"", ",", "\"Family:Sphyrnidae\""}], 
                    "]"}],"\"Entity[\\\"Species\\\", \
\\\"Family:Sphyrnidae\\\"]\"","\"species specification\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Species\"", ",", "\"Image\""}], "]"}],
                    "\"EntityProperty[\\\"Species\\\", \\\"Image\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    
                    TemplateBox[{
                    "\"hammerhead sharks\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"Species\"", ",", "\"Family:Sphyrnidae\""}], 
                    "]"}],"\"Entity[\\\"Species\\\", \
\\\"Family:Sphyrnidae\\\"]\"","\"species specification\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Species\"", ",", "\"Image\""}], "]"}],
                    "\"EntityProperty[\\\"Species\\\", \\\"Image\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    TemplateBox[{"\"hammerhead sharks\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Species\"", ",", "\"Family:Sphyrnidae\""}], 
                    "]"}], "\"Entity[\\\"Species\\\", \\\"Family:Sphyrnidae\\\
\"]\"", "\"species specification\""}, "Entity"], "[", 
                    TemplateBox[{"\"image\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Species\"", ",", "\"Image\""}], "]"}], 
                    "\"EntityProperty[\\\"Species\\\", \\\"Image\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell["\<\
If you want to see the full page of results created by WolframAlpha, start \
your input line with ==\
\>", "Text",
 CellChangeTimes->{{3.681061229611106*^9, 3.681061267193787*^9}}],

Cell["", "WolframAlphaLong",
 CellChangeTimes->{3.6810612715046167`*^9}],

Cell["\<\
We will see many examples of these queries in the next section.\
\>", "Text",
 CellChangeTimes->{{3.681061324632101*^9, 3.681061332919428*^9}, {
  3.681061373406704*^9, 3.681061375117859*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Why you need a course like this", "Title",
 CellChangeTimes->{{3.6507088092630787`*^9, 3.650708839725322*^9}, {
   3.681060160618639*^9, 3.681060161593758*^9}, 3.681061414398168*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Two presidents: Teddy Roosevelt", "Section",
 CellChangeTimes->{{3.650710349983841*^9, 3.6507103529596243`*^9}, {
  3.650733087956044*^9, 3.650733091235148*^9}}],

Cell["\<\
A historian of the early 20th century might hope to read a lot of the \
material produced by Teddy Roosevelt\[CloseCurlyQuote]s administration. Let\
\[CloseCurlyQuote]s use WolframAlpha to learn a little about Roosevelt. When \
you want to see the full WolframAlpha results page, start an input line with \
two equals signs and you will get an input field. Then just type your query.\
\>", "Text",
 CellChangeTimes->{{3.6507164056794853`*^9, 3.6507164362146387`*^9}, {
  3.681061110280231*^9, 3.681061140294477*^9}}],

Cell["teddy roosevelt", "WolframAlphaLong",
 CellChangeTimes->{{3.6507103726026707`*^9, 3.6507103762227297`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Two presidents: Bill Clinton", "Section",
 CellChangeTimes->{{3.650733101651307*^9, 3.650733107906396*^9}, 
   3.6507331496171293`*^9}],

Cell["\<\
A historian of the late 20th century has no hope of ever reading most of the \
material produced by Bill Clinton\[CloseCurlyQuote]s administration\
\>", "Text",
 CellChangeTimes->{{3.6507164056794853`*^9, 3.6507164362146387`*^9}, {
  3.650733434638856*^9, 3.650733456268962*^9}}],

Cell["bill clinton", "WolframAlphaLong",
 CellChangeTimes->{{3.650710483405711*^9, 3.6507104862987747`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["How long would it take to read 40 million emails?", "Section",
 CellChangeTimes->{{3.6507156678587093`*^9, 3.650715688009467*^9}}],

Cell["\<\
Clinton was the first US President to send email in office. His presidential \
library contains about 40 million emails sent by members of the Clinton \
administration.\
\>", "Text",
 CellChangeTimes->{{3.6507155871976357`*^9, 3.650715633307309*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "typical reading speed", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Output", 
        "Quantity[Interval[{250, 300}], \
IndependentUnit[\"words\"]/\"Minutes\"]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox["\"typical reading speed\"", Identity], TraditionalForm],
              PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Data", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "moutput", {}, {
        "Quantity[Interval[{250, 300}], \
IndependentUnit[\"words\"]/\"Minutes\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TemplateBox[{
                    TagBox["250", 
                    Global`TagBoxWrapper["StringBoxes" -> "250"]], 
                    TagBox["300", 
                    Global`TagBoxWrapper["StringBoxes" -> "300"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["250", 
                    Global`TagBoxWrapper["StringBoxes" -> "250"]], 
                    StyleBox["\"\[MediumSpace]to\[MediumSpace]\"", 
                    GrayLevel[0.6]], 
                    TagBox["300", 
                    Global`TagBoxWrapper["StringBoxes" -> "300"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"words per minute\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "UnitConversion", "numsubpods" -> "3", 
     "position" -> "300", "scanner" -> "Unit", "title" -> 
     "Unit conversions"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TemplateBox[{
                    TagBox["4.167", 
                    Global`TagBoxWrapper["StringBoxes" -> "4.167"]], 
                    TagBox["5", 
                    Global`TagBoxWrapper["StringBoxes" -> "5"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["4.167", 
                    Global`TagBoxWrapper["StringBoxes" -> "4.167"]], 
                    StyleBox["\"\[MediumSpace]to\[MediumSpace]\"", 
                    GrayLevel[0.6]], 
                    TagBox["5", 
                    Global`TagBoxWrapper["StringBoxes" -> "5"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"words per second\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TemplateBox[{
                    TagBox["250", 
                    Global`TagBoxWrapper["StringBoxes" -> "250"]], 
                    TagBox["300", 
                    Global`TagBoxWrapper["StringBoxes" -> "300"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["250", 
                    Global`TagBoxWrapper["StringBoxes" -> "250"]], 
                    StyleBox["\"\[MediumSpace]to\[MediumSpace]\"", 
                    GrayLevel[0.6]], 
                    TagBox["300", 
                    Global`TagBoxWrapper["StringBoxes" -> "300"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"millilampsons\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TemplateBox[{
                    TagBox["0.25", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.25"]], 
                    TagBox["0.3", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.3"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["0.25", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.25"]], 
                    StyleBox["\"\[MediumSpace]to\[MediumSpace]\"", 
                    GrayLevel[0.6]], 
                    TagBox["0.3", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.3"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"lampsons\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod4$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "CorrespondingQuantity", "numsubpods" -> 
     "1", "position" -> "400", "scanner" -> "Unit", "title" -> 
     "Corresponding quantity"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Time per word from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"WR", "\[LongEqual]", 
                    
                    RowBox[{"1", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "TPW"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Time per word from ", 
                    Global`InlineForm["WR \[LongEqual] 1/TPW"], ":"}]]]}, {
                TagBox[
                 GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[10]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["200", 
                    Global`TagBoxWrapper["StringBoxes" -> "200"]], 
                    TagBox["240", 
                    Global`TagBoxWrapper["StringBoxes" -> "240"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["200", 
                    Global`TagBoxWrapper["StringBoxes" -> "200"]], 
                    StyleBox["\"\[MediumSpace]to\[MediumSpace]\"", 
                    GrayLevel[0.6]], 
                    TagBox["240", 
                    Global`TagBoxWrapper["StringBoxes" -> "240"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"milliseconds per word\"", {
                    FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller,
                     LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "0"}, {}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.033", 
    "parsetiming" -> "0.352", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa9501cagccaae84g009900002fbaced28b8gi449", "host" -> 
    "http://www5b.wolframalpha.com", "server" -> "7", "related" -> 
    "http://www5b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa9511cagccaae84g00990000211cec1267ic9040&s=7", "version" -> "2.6"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2015, 9, 8, 11, 41, 46.022546`8.415545617090356}, "Line" -> 53,
     "SessionID" -> 18932344380031931207}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Output", 
    "Quantity[Interval[{250, 300}], IndependentUnit[\"words\"]/\"Minutes\"]"},
    Typeset`open$$ = False, Typeset`newq$$ = "typical reading speed"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{315., {74., 22.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell["Assume average length of email is 1/4 page, so 62.5 words", "Text",
 CellChangeTimes->{{3.65071571978477*^9, 3.6507157341836348`*^9}, {
  3.650715804165978*^9, 3.650715808117086*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = " words per page", Typeset`newq$$ = 
   " words per page", Typeset`chosen$$ = 
   "FormulaData[{\"WordsPerPage\", \"Manuscript\"}]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse[
              " words per page", 
               Defer[
                FormulaData[{"WordsPerPage", "Manuscript"}]], "Fast parse"]; 
             Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13., {3., 11.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13., {3., 11.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 " words per page", 
                  Defer[
                   FormulaData[{"WordsPerPage", "Manuscript"}]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"FormulaData", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<WordsPerPage\>\"", ",", " ", "\"\<Manuscript\>\""}], 
                   "}"}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"FormulaData", "[", 
                  RowBox[{"{", 
                   
                   RowBox[{"\<\"WordsPerPage\"\>", ",", 
                    " ", "\<\"Manuscript\"\>"}], "}"}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"FormulaData", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"WordsPerPage\"", ",", " ", "\"Manuscript\""}], 
                    "}"}], "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[
                  " words per page", 
                   Defer[
                    FormulaData[{"WordsPerPage", "Manuscript"}]], 
                   "Fast parse"]; Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    " words per page", 
                    Defer[
                    FormulaData[{"WordsPerPage", "Manuscript"}]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"FormulaData", "[", 
                    RowBox[{"{", 
                    RowBox[{"\<\"WordsPerPage\"\>", ",", 
                    " ", "\<\"Manuscript\"\>"}], "}"}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"FormulaData", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"WordsPerPage\"\>", ",", 
                    " ", "\<\"Manuscript\"\>"}], "}"}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"FormulaData", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"WordsPerPage\"", ",", " ", "\"Manuscript\""}], 
                    "}"}], "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"250", "/", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.650715773727647*^9, 3.650715776590227*^9}},
 NumberMarks->False],

Cell["Emails per minute - round up to 5", "Text",
 CellChangeTimes->{{3.6507158211883707`*^9, 3.6507158464516087`*^9}}],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"300", "/", "62.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.650715829665805*^9, 3.650715838188015*^9}}],

Cell["\<\
Reading 40 million emails at 5 per minute would take 8 million minutes or \
more than 15 years ... if you could read 24/7 and remember everything you read\
\>", "Text",
 CellChangeTimes->{{3.650715873139327*^9, 3.650715912769265*^9}, {
  3.650715950056684*^9, 3.650716000230185*^9}}],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"40000000", "/", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.650715889912681*^9, 3.650715903841634*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "8 * 10^6 minutes in years", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Output", "Quantity[15.22, \"Years\"]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              FormBox[
               TagBox[
                FormBox[
                 RowBox[{"\"convert \"", "\[InvisibleSpace]", 
                   TagBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"8", "\[Times]", 
                    SuperscriptBox["10", "6"]}], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"minutes\"", {
                    FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller,
                     LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], HoldForm], 
                   "\[InvisibleSpace]", "\" to \"", "\[InvisibleSpace]", 
                   TagBox[
                    StyleBox[
                    "\"years\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller, StripOnInput -> False], HoldForm]}], 
                 TraditionalForm], Format[#, TraditionalForm]& ], 
               TraditionalForm], #& , SyntaxForm -> Plus], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Identity", 
     "title" -> "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["moutput", {}, {"Quantity[15.22, \"Years\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["15.22", 
                   Global`TagBoxWrapper["StringBoxes" -> "15.22"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"years\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "AdditionalConversion", "numsubpods" -> 
     "4", "position" -> "300", "scanner" -> "Unit", "title" -> 
     "Additional conversions"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["5556", 
                   Global`TagBoxWrapper["StringBoxes" -> "5556"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"days\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["133\[ThinSpace]333", 
                   Global`TagBoxWrapper["StringBoxes" -> "133333"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"hours\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["1.521", 
                   Global`TagBoxWrapper["StringBoxes" -> "1.521"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"average Gregorian decades\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox[
                   RowBox[{"4.8", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "8"]}], 
                   Global`TagBoxWrapper[
                   "StringBoxes" -> RowBox[{"4.8", "\[Times]", 
                    SuperscriptBox["10", "8"]}]], SyntaxForm -> CenterDot], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"seconds\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod4$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "ComparisonAsPeriod", "numsubpods" -> 
     "2", "position" -> "400", "scanner" -> "Unit", "title" -> 
     "Comparisons as period"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "0", "\".\"", "5", "2"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"orbital period of Saturn\"", FontFamily -> "Helvetica", 
                FontSize -> Smaller, StripOnInput -> False], "\" \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"\[TildeTilde]\[ThinSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["29", 
                    Global`TagBoxWrapper["StringBoxes" -> "29"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"Julian years\"", {
                    FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller,
                     LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
             TraditionalForm], TraditionalForm]], "Output", {}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "1", "\".\"", "3"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"orbital period of Jupiter\"", FontFamily -> "Helvetica", 
                FontSize -> Smaller, StripOnInput -> False], "\" \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"\[TildeTilde]\[ThinSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["12", 
                    Global`TagBoxWrapper["StringBoxes" -> "12"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"Julian years\"", {
                    FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller,
                     LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
             TraditionalForm], TraditionalForm]], "Output", {}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "ComparisonAsHalf\[Hyphen]life", 
     "numsubpods" -> "2", "position" -> "500", "scanner" -> "Unit", "title" -> 
     "Comparisons as half\[Hyphen]life"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "2", "\".\"", "9"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"half\[Hyphen]life of cobalt\[Hyphen]60\"", FontFamily -> 
                "Helvetica", FontSize -> Smaller, StripOnInput -> False], 
               "\" \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"1.6635", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "8"]}], 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"1.6635", "\[Times]", 
                    SuperscriptBox["10", "8"]}]], SyntaxForm -> CenterDot], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"s\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
             TraditionalForm], TraditionalForm]], "Output", {}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "5", "\".\"", "8"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"half\[Hyphen]life of sodium\[Hyphen]22\"", FontFamily -> 
                "Helvetica", FontSize -> Smaller, StripOnInput -> False], 
               "\" \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"8.2108", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "7"]}], 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"8.2108", "\[Times]", 
                    SuperscriptBox["10", "7"]}]], SyntaxForm -> CenterDot], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"s\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
             TraditionalForm], TraditionalForm]], "Output", {}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Interpretation", "numsubpods" -> "2", 
     "position" -> "600", "scanner" -> "Unit", "title" -> "Interpretations"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"time\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"period\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Interpretation__More"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "0"}, {}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "6", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.467", 
    "parsetiming" -> "0.713", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa8701fh9ef6g65ha3176000063475a84866b9gad", "host" -> 
    "http://www5a.wolframalpha.com", "server" -> "24", "related" -> 
    "http://www5a.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa8711fh9ef6g65ha31760000218c7cf170hfc86a&s=24", "version" -> "2.6"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2015, 9, 8, 11, 45, 38.826973`8.341708512513168}, "Line" -> 61,
     "SessionID" -> 18932344380031931207}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Output", "Quantity[15.22, \"Years\"]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "8 * 10^6 minutes in years"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{220., {62., 22.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell["\<\
How many words? Assuming 62.5 per email, that is 2.5 billion words\
\>", "Text",
 CellChangeTimes->{{3.6507160797960443`*^9, 3.6507160954853573`*^9}, {
  3.650716136505206*^9, 3.6507161466567802`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"40", " ", 
    SuperscriptBox["10", "6"]}], ")"}], 
  RowBox[{"(", "62.5", ")"}]}]], "Input",
 CellChangeTimes->{{3.6507160995209093`*^9, 3.650716119626007*^9}}],

Cell["\<\
If you have machine-readable sources, you can use a computer to help you read \
them\
\>", "Text",
 CellChangeTimes->{{3.650716260941457*^9, 3.650716274692328*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Now is different", "Title",
 CellChangeTimes->{{3.6507331343541203`*^9, 3.6507331383533087`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Now is different: Population", "Section",
 CellChangeTimes->{{3.650708980809061*^9, 3.65070898414421*^9}, {
  3.650711694792892*^9, 3.650711697583757*^9}}],

Cell[CellGroupData[{

Cell["Current population", "Subsubsection",
 CellChangeTimes->{{3.650733914787446*^9, 3.650733918219407*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "current world population", Typeset`newq$$ =
    "current world population", Typeset`chosen$$ = 
   "CountryData[\"World\", \"Population\"]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13., {3., 11.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13., {3., 11.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "current world population", 
                  Defer[
                   CountryData["World", "Population"]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"CountryData", "[", 
                  RowBox[{"\"\<World\>\"", ",", " ", "\"\<Population\>\""}], 
                  "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"CountryData", "[", 
                  RowBox[{"\<\"World\"\>", ",", " ", "\<\"Population\"\>"}], 
                  "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"CountryData", "[", 
                    RowBox[{"\"World\"", ",", " ", "\"Population\""}], "]"}]],
                    "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "current world population", 
                    Defer[
                    CountryData["World", "Population"]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"CountryData", "[", 
                    RowBox[{"\<\"World\"\>", ",", " ", "\<\"Population\"\>"}],
                     "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"CountryData", "[", 
                    RowBox[{"\<\"World\"\>", ",", " ", "\<\"Population\"\>"}],
                     "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"CountryData", "[", 
                    RowBox[{"\"World\"", ",", " ", "\"Population\""}], "]"}]],
                     "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reminder: exponential notation", "Subsubsection",
 CellChangeTimes->{{3.6507136998813467`*^9, 3.650713721559928*^9}}],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["\"\<10\>\"", "x"], ",", 
      SuperscriptBox["10", "x"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "3", ",", "12", ",", "3"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.650733517856641*^9, 3.650733568913007*^9}, {
   3.650733610616425*^9, 3.6507336150152483`*^9}, {3.65073366503843*^9, 
   3.650733697789111*^9}, {3.650733744947309*^9, 3.650733758737686*^9}, 
   3.650733805456896*^9, {3.6507338759982443`*^9, 3.650733885596785*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["All the people who ever lived", "Subsubsection",
 CellChangeTimes->{{3.650733929739637*^9, 3.6507339345228*^9}}],

Cell["About 6.6% of the people who have ever lived are alive today", "Text",
 CellChangeTimes->{{3.650716529875143*^9, 3.65071656481804*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "how many people have ever lived", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
              "\"number of people who have ever lived on Earth\"", Identity], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Data", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["107.6", 
                    Global`TagBoxWrapper["StringBoxes" -> "107.6"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"billion\"", {
                    ShowStringCharacters -> False, FontFamily :> 
                    Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 1000000000& , AutoDelete -> 
                    True]}], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller,
                     LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"as estimated in 2011 by the Population Reference \
Bureau which assumes modern \"", 
                    StyleBox[
                    "\"Homo sapiens\"", Italic, StripOnInput -> False], 
                    "\" appeared about 50,000 BC\""}, "RowDefault"], 
                    "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Verdana", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> None, "Rows" -> None}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}}, FrameStyle -> 
               GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Comparison", "numsubpods" -> "1", 
     "position" -> "300", "scanner" -> "Unit", "title" -> "Comparison"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", "15", "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"world population\"", FontFamily -> "Helvetica", FontSize -> 
                Smaller, StripOnInput -> False], "\" \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["7.279", 
                    Global`TagBoxWrapper["StringBoxes" -> "7.279"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"billion\"", {
                    ShowStringCharacters -> False, FontFamily :> 
                    Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 1000000000& , AutoDelete -> 
                    True]}], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller,
                     LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
             TraditionalForm], TraditionalForm]], "Output", {}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "0"}, {}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.06", 
    "parsetiming" -> "0.624", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa5721bc01adbb092e4hb0000295756168gfa1738", "host" -> 
    "http://www4b.wolframalpha.com", "server" -> "40", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa5731bc01adbb092e4hb0000308daeeef1i6961f&s=40", "version" -> "2.6"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2015, 9, 8, 11, 54, 46.872851`8.42349634651739}, "Line" -> 63, 
    "SessionID" -> 18932344380031931207}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Content"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "how many people have ever lived"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{276., {35., 22.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"7.13", "/", "107.6"}], "]"}]], "Input",
 CellChangeTimes->{{3.650716518231337*^9, 3.650716524739471*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["World population history", "Subsubsection",
 CellChangeTimes->{{3.6507339637783623`*^9, 3.6507339712652607`*^9}}],

Cell["world population history", "WolframAlphaLong",
 CellChangeTimes->{{3.6507109453680677`*^9, 3.650710953842271*^9}}],

Cell["\<\
Try switching long-term population history graph between log and linear \
scales...\
\>", "Text",
 CellChangeTimes->{{3.650711015144703*^9, 3.6507110467909403`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Now is different: Moore\[CloseCurlyQuote]s Law", "Section",
 CellChangeTimes->{{3.650711844787283*^9, 3.650711850074464*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "when was transistor invented?", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Output", "DateObject[{1947}]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"transistor\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {Global`InventionData, "Transistor"}]], 
                    Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"date of invention\""}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Identity", 
     "title" -> "Result"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["moutput", {}, {"DateObject[{1947}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"1947\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "YearsFromCurrent", "numsubpods" -> 
     "1", "position" -> "300", "scanner" -> "Date", "title" -> 
     "Time from today"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"-68"}], 
       XMLElement["moutput", {}, {"-68"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              FormBox[
               TemplateBox[{
                 TemplateBox[{
                   StyleBox["\"The year\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\" \""}, "RowDefault"], 
                 "\"1947\"", 
                 TemplateBox[{"\" \"", 
                   StyleBox["\"was\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\" \""}, "RowDefault"], "68", 
                 TemplateBox[{"\" \"", 
                   StyleBox["\"years ago.\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}, 
                "RowDefault"], TraditionalForm], 
              Format[#, TraditionalForm]& ], TraditionalForm], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Date/timeRange", "numsubpods" -> "1", 
     "position" -> "400", "scanner" -> "Date", "title" -> "Date range"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               FormBox[
                TemplateBox[{
                  FormBox[
                   TagBox["\"Wednesday, January 1, 1947\"", Identity], 
                   TraditionalForm], 
                  TemplateBox[{"\"  \"", 
                    StyleBox["\"to\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\"  \""}, "RowDefault"], 
                  FormBox[
                   TagBox["\"Wednesday, December 31, 1947\"", Identity], 
                   TraditionalForm]}, "RowDefault"], TraditionalForm], 
               Format[#, TraditionalForm]& ], TraditionalForm], 
             TraditionalForm], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More calendars", "input" -> 
         "Date/timeRange__More calendars"}, {}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Notable events in 1947", "scanner" -> "Date", "id" -> 
     "NotableEventForDate", "position" -> "450", "error" -> "false", 
     "numsubpods" -> "5"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{
                 FormBox[
                  TagBox["\"March 1\"", Identity], TraditionalForm], 
                 "\": \""}, "RowDefault"], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              TagBox[
               TagBox["\"International Monetary Fund begins operations\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, 
                   "InternationalMonetaryFundBeginsOperations"}]], Identity]},
              "RowDefault"], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{
                 FormBox[
                  TagBox["\"June 5\"", Identity], TraditionalForm], "\": \""},
                 "RowDefault"], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              TagBox[
               TagBox[
               "\"US Secretary of State George Marshall announces the \
Marshall Plan\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, 
                   "MarshallPlanAnnounced1947"}]], Identity]}, "RowDefault"], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{
                 FormBox[
                  TagBox["\"June 25\"", Identity], TraditionalForm], 
                 "\": \""}, "RowDefault"], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              TagBox[
               TagBox[
               "\"\\\"The Diary of Anne Frank\\\" is first published\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, 
                   "DiaryOfAnneFrankPublished1947"}]], Identity]}, 
             "RowDefault"], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{
                 FormBox[
                  TagBox["\"July 12\"", Identity], TraditionalForm], 
                 "\": \""}, "RowDefault"], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              TagBox[
               TagBox["\"Marshall Plan devised\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, 
                   "MarshallPlan"}]], Identity]}, "RowDefault"], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{
                 FormBox[
                  TagBox["\"August 15\"", Identity], TraditionalForm], 
                 "\": \""}, "RowDefault"], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              TagBox[
               TagBox["\"Pakistan forms\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, 
                   "PakistanFormed"}]], Identity]}, "RowDefault"], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "NotableEventForDate__More"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Calendar", "scanner" -> "Date", "id" -> 
     "CalendarImage", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"January\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False]}, {
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False]}, {
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False]}, {
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False]}, {
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"February\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False]}, {
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False]}, {
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False]}, {
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False]}, {
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"March\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False]}, {
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False]}, {
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False]}, {
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False]}, {
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False]}, {
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"April\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False]}, {
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False]}, {
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False]}, {
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False]}, {
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"May\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False]}, {
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False]}, {
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False]}, {
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False]}, {
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"June\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False]}, {
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False]}, {
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False]}, {
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False]}, {
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"July\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False]}, {
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False]}, {
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False]}, {
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False]}, {
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"August\"", FontSize -> 11.5, FontFamily -> "Helvetica",
                     StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False]}, {
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False]}, {
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False]}, {
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False]}, {
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False]}, {
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"September\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False]}, {
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False]}, {
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False]}, {
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False]}, {
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"October\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False]}, {
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False]}, {
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False]}, {
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False]}, {
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"November\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False]}, {
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False]}, {
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False]}, {
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False]}, {
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False]}, {
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"December\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False]}, {
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False]}, {
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False]}, {
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False]}, {
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{2}}}], 
             "Grid"], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}]}], 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, 
   Typeset`pod35$$, Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
InventionDataSourceInformationNotes.html", "text" -> "Invention data"}, {}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
InventionDataSourceInformationNotes.html", "text" -> 
        "Invention data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "5", "datatypes" -> 
     "Invention", "timedout" -> "Date,PlanetaryAstronomy,Data", 
     "timedoutpods" -> "", "timing" -> "4.168", "parsetiming" -> "0.329", 
     "parsetimedout" -> "false", "recalculate" -> 
     "http://www5a.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa5361di3i718hci219h9000036345081f0hah796&s=30", "id" -> 
     "MSPa5371di3i718hci219h900001ic390e5471d3d9b", "host" -> 
     "http://www5a.wolframalpha.com", "server" -> "30", "related" -> 
     "http://www5a.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa5381di3i718hci219h900004249gh7ch037a4cb&s=30", "version" -> "2.6"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
     "HistoricalEvent,Invention", "timedout" -> "", "timedoutpods" -> "", 
     "timing" -> "2.75", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www5a.wolframalpha.com", "server" -> "30", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2015, 9, 8, 10, 9, 12.645595`7.854514254453652}, "Line" -> 1, 
    "SessionID" -> 18932344380031931207}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6}, Typeset`failedpods$$ = {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
   19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35}, 
   Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Output", "DateObject[{1947}]"}, Typeset`open$$ =
    False, Typeset`newq$$ = "when was transistor invented?"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$}, Typeset`chosen$$,
         Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{258., {60., 22.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$}, 
         Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www5a.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa5361di3i718hci219h9000036345081f0hah796&s=30", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TextSentences", "[", 
   RowBox[{"WikipediaData", "[", "\"\<Moore's Law\>\"", "]"}], "]"}], 
  "\[LeftDoubleBracket]", 
  RowBox[{";;", "5"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.650717451196446*^9, 3.6507175354727993`*^9}, {
  3.650734046143561*^9, 3.650734048406489*^9}}],

Cell["moore's law", "WolframAlphaLong",
 CellChangeTimes->{{3.6507101211676598`*^9, 3.65071012450356*^9}}],

Cell["\<\
The number of transistors we now manufacture every year is about the same as \
the number of raindrops that fall in the continental US in the same period\
\>", "Text",
 CellChangeTimes->{{3.6507163618817987`*^9, 3.650716390296144*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Now is different: The Internet and Telecommunications", "Section",
 CellChangeTimes->{{3.650709213240108*^9, 3.650709214015834*^9}, {
  3.650711984014266*^9, 3.650712018572541*^9}}],

Cell["\<\
Moore\[CloseCurlyQuote]s law affects everything electronic, both hardware and \
software\
\>", "Text",
 CellChangeTimes->{{3.650716691069313*^9, 3.650716695133361*^9}, {
  3.650716737596373*^9, 3.6507167504511967`*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "invention of internet", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Output", "DateObject[{1973}]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"the internet\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {Global`InventionData, "TheInternet"}]], 
                    Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"date of invention\""}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Identity", 
     "title" -> "Result"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["moutput", {}, {"DateObject[{1973}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"1973\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "YearsFromCurrent", "numsubpods" -> 
     "1", "position" -> "300", "scanner" -> "Date", "title" -> 
     "Time from today"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"-42"}], 
       XMLElement["moutput", {}, {"-42"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              FormBox[
               TemplateBox[{
                 TemplateBox[{
                   StyleBox["\"The year\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\" \""}, "RowDefault"], 
                 "\"1973\"", 
                 TemplateBox[{"\" \"", 
                   StyleBox["\"was\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\" \""}, "RowDefault"], "42", 
                 TemplateBox[{"\" \"", 
                   StyleBox["\"years ago.\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}, 
                "RowDefault"], TraditionalForm], 
              Format[#, TraditionalForm]& ], TraditionalForm], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Date/timeRange", "numsubpods" -> "1", 
     "position" -> "400", "scanner" -> "Date", "title" -> "Date range"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               FormBox[
                TemplateBox[{
                  FormBox[
                   TagBox["\"Monday, January 1, 1973\"", Identity], 
                   TraditionalForm], 
                  TemplateBox[{"\"  \"", 
                    StyleBox["\"to\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\"  \""}, "RowDefault"], 
                  FormBox[
                   TagBox["\"Monday, December 31, 1973\"", Identity], 
                   TraditionalForm]}, "RowDefault"], TraditionalForm], 
               Format[#, TraditionalForm]& ], TraditionalForm], 
             TraditionalForm], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More calendars", "input" -> 
         "Date/timeRange__More calendars"}, {}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Notable events in 1973", "scanner" -> "Date", "id" -> 
     "NotableEventForDate", "position" -> "450", "error" -> "false", 
     "numsubpods" -> "5"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{
                 FormBox[
                  TagBox["\"January 22\"", Identity], TraditionalForm], 
                 "\": \""}, "RowDefault"], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              TagBox[
               TagBox["\"Supreme Court issues Roe v. Wade decision\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, "RoeVWade"}]], 
               Identity]}, "RowDefault"], TraditionalForm]], "Output", {}]}], 
       
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{
                 FormBox[
                  TagBox["\"January 27\"", Identity], TraditionalForm], 
                 "\": \""}, "RowDefault"], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              TagBox[
               TagBox["\"American troops leave Vietnam\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, 
                   "LastTroopsLeaveVietnam"}]], Identity]}, "RowDefault"], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{
                 FormBox[
                  TagBox["\"January 30\"", Identity], TraditionalForm], 
                 "\": \""}, "RowDefault"], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              TagBox[
               TagBox["\"KISS plays their first concert\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, 
                   "KISSPlaysFirstConcert"}]], Identity]}, "RowDefault"], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{
                 FormBox[
                  TagBox["\"March 29\"", Identity], TraditionalForm], 
                 "\": \""}, "RowDefault"], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              TagBox[
               TagBox["\"last United States troops leave South Vietnam\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, 
                   "LastUnitedStatesTroopsLeaveSouthVietnam"}]], Identity]}, 
             "RowDefault"], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               FormBox[
                FormBox[
                 FormBox[
                  TagBox[
                   FormBox[
                    TemplateBox[{
                    FormBox[
                    TagBox["\"May 17\"", Identity], TraditionalForm], 
                    TemplateBox[{"\"  \"", 
                    StyleBox["\"to\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\"  \""}, "RowDefault"], 
                    FormBox[
                    TagBox["\"February 1, 1974\"", Identity], 
                    TraditionalForm]}, "RowDefault"], TraditionalForm], 
                   Format[#, TraditionalForm]& ], TraditionalForm], 
                 TraditionalForm], TraditionalForm], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], "\": \"", 
              TagBox[
               TagBox["\"Watergate hearings\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, 
                   "WatergateHearingsBegin"}]], Identity]}, "RowDefault"], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "NotableEventForDate__More"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Calendar", "scanner" -> "Date", "id" -> 
     "CalendarImage", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"January\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False]}, {
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False]}, {
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False]}, {
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False]}, {
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"February\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False]}, {
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False]}, {
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False]}, {
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False]}, {
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"March\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False]}, {
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False]}, {
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False]}, {
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False]}, {
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"April\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False]}, {
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False]}, {
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False]}, {
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False]}, {
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"May\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False]}, {
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False]}, {
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False]}, {
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False]}, {
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"June\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False]}, {
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False]}, {
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False]}, {
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False]}, {
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"July\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False]}, {
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False]}, {
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False]}, {
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False]}, {
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"August\"", FontSize -> 11.5, FontFamily -> "Helvetica",
                     StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False]}, {
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False]}, {
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False]}, {
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False]}, {
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"September\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False]}, {
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False]}, {
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False]}, {
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False]}, {
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False]}, {
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"October\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False]}, {
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False]}, {
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False]}, {
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False]}, {
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"November\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False]}, {
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False]}, {
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False]}, {
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False]}, {
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"December\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False]}, {
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False]}, {
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False]}, {
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False]}, {
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False]}, {
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{2}}}], 
             "Grid"], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}]}], 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, 
   Typeset`pod35$$, Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
InventionDataSourceInformationNotes.html", "text" -> "Invention data"}, {}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
InventionDataSourceInformationNotes.html", "text" -> 
        "Invention data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "5", "datatypes" -> 
     "Invention", "timedout" -> "Date,PlanetaryAstronomy,Data", 
     "timedoutpods" -> "", "timing" -> "3.983", "parsetiming" -> "0.147", 
     "parsetimedout" -> "false", "recalculate" -> 
     "http://www5a.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa18911giche9c46d472c50000543f57hd3caa7gbf&s=44", "id" -> 
     "MSPa18921giche9c46d472c5000037b5c016f509fcg3", "host" -> 
     "http://www5a.wolframalpha.com", "server" -> "44", "related" -> 
     "http://www5a.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa18931giche9c46d472c500004ga5b2fedcb00bce&s=44", "version" -> "2.6"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
     "HistoricalEvent,Invention", "timedout" -> "", "timedoutpods" -> "", 
     "timing" -> "2.35", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www5a.wolframalpha.com", "server" -> "44", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2015, 9, 8, 12, 5, 39.374634`8.347791508430868}, "Line" -> 70, 
    "SessionID" -> 18932344380031931207}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6}, Typeset`failedpods$$ = {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
   19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35}, 
   Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Output", "DateObject[{1973}]"}, Typeset`open$$ =
    False, Typeset`newq$$ = "invention of internet"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$}, Typeset`chosen$$,
         Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{208., {60., 22.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$}, 
         Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www5a.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa18911giche9c46d472c50000543f57hd3caa7gbf&s=44", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell["internet hosts", "WolframAlphaLong",
 CellChangeTimes->{{3.650710687052009*^9, 3.650710691395423*^9}, {
   3.650710739227816*^9, 3.6507107433536177`*^9}, {3.650710807968605*^9, 
   3.650710808175126*^9}, 3.6507108507589817`*^9}],

Cell["internet access", "WolframAlphaLong",
 CellChangeTimes->{{3.650710897825012*^9, 3.6507109017720013`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Now is different: Digital Information", "Section",
 CellChangeTimes->{{3.650714207407177*^9, 3.650714213982243*^9}}],

Cell[CellGroupData[{

Cell["Digital books", "Subsection",
 CellChangeTimes->{{3.6507148638951597`*^9, 3.650714866438882*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "first known use of e-book", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "FirstRecordYear:WordData", "Result", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"e\[Hyphen]book\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "e-book"}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", "\"English word\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                    0], {LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"first known use in English\""}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "FirstRecordYear:WordData", 
     "numsubpods" -> "1", "position" -> "200", "primary" -> "true", "scanner" -> 
     "Data", "title" -> "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"  ", "\"  \"", 
              FormBox[
               TagBox["\"1988\"", Identity], TraditionalForm], 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TagBox[
                  TagBox["\"Cold War era\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {HistoricalPeriodData, "ColdWarEra"}]], 
                  Identity], "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["27", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller,
                     LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\" ago\""}, "RowDefault"], 
                 "\[NoBreak]", "\")\""}], {
               FontFamily -> "Verdana", FontSize -> 10, 
                GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False]}, 
             "RowWithSeparators"], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "2"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
HistoricalPeriodDataSourceInformationNotes.html", "text" -> 
        "Historical period data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/WordDataSourceInformationNotes.\
html", "text" -> "Word data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "HistoricalPeriod,Word", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "1.071", "parsetiming" -> "0.567", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSPa8811eb20ci668a0d89g0000301e5533bgdg60e8", "host" -> 
    "http://www4b.wolframalpha.com", "server" -> "18", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa8821eb20ci668a0d89g00002512bgi6525fa476&s=18", "version" -> "2.6"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2015, 9, 8, 11, 18, 21.115284`8.077171910481413}, "Line" -> 46,
     "SessionID" -> 18932344380031931207}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "FirstRecordYear:WordData", "Result", 1, 1, "Content"}, Typeset`open$$ = 
   False, Typeset`newq$$ = "first known use of e-book"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{224., {35., 22.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "estimated number of unique books", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox["\"estimated number of unique books\"", Identity], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Data", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 RowBox[{
                   TagBox["129.9", 
                    Global`TagBoxWrapper["StringBoxes" -> "129.9"]], 
                   "\[ThickSpace]", 
                   TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily :> 
                    Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 1000000& , AutoDelete -> 
                    True]}]}, {
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", 
                    "\"according to Google Books, August 2010\"", 
                    "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Verdana", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> None, "Rows" -> None}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}}, FrameStyle -> 
               GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "0"}, {}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.772", 
    "parsetiming" -> "0.45", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "MSPa8061f195e087b534cg50000370g351d6gf785e1", "host" -> 
    "http://www5a.wolframalpha.com", "server" -> "43", "related" -> 
    "http://www5a.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa8071f195e087b534cg50000606f0id257g98ff3&s=43", "version" -> "2.6"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2015, 9, 8, 11, 22, 52.059679`8.469076460898334}, "Line" -> 49,
     "SessionID" -> 18932344380031931207}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Content"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "estimated number of unique books"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{288., {35., 22.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[TextData[{
 "Google\[CloseCurlyQuote]s database contains more than 30 million books in \
digital form, or about 23% of the books ",
 StyleBox["ever",
  FontSlant->"Italic"],
 " published"
}], "Text",
 CellChangeTimes->{{3.650714807969578*^9, 3.650714823048235*^9}, {
  3.650714870726657*^9, 3.650714886294045*^9}}],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"30", "/", "129.9"}], "]"}]], "Input",
 CellChangeTimes->{{3.6507148320308867`*^9, 3.650714845455591*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["World Wide Web", "Subsection",
 CellChangeTimes->{{3.650734188201569*^9, 3.6507341978646307`*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "invention of world wide web", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Output", "DateObject[{1990}]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"world wide web\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {Global`InventionData, "WorldWideWeb"}]], 
                    Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"date of invention\""}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Identity", 
     "title" -> "Result"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["moutput", {}, {"DateObject[{1990}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"1990\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "YearsFromCurrent", "numsubpods" -> 
     "1", "position" -> "300", "scanner" -> "Date", "title" -> 
     "Time from today"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"-25"}], 
       XMLElement["moutput", {}, {"-25"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              FormBox[
               TemplateBox[{
                 TemplateBox[{
                   StyleBox["\"The year\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\" \""}, "RowDefault"], 
                 "\"1990\"", 
                 TemplateBox[{"\" \"", 
                   StyleBox["\"was\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\" \""}, "RowDefault"], "25", 
                 TemplateBox[{"\" \"", 
                   StyleBox["\"years ago.\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}, 
                "RowDefault"], TraditionalForm], 
              Format[#, TraditionalForm]& ], TraditionalForm], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Date/timeRange", "numsubpods" -> "1", 
     "position" -> "400", "scanner" -> "Date", "title" -> "Date range"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               FormBox[
                TemplateBox[{
                  FormBox[
                   TagBox["\"Monday, January 1, 1990\"", Identity], 
                   TraditionalForm], 
                  TemplateBox[{"\"  \"", 
                    StyleBox["\"to\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\"  \""}, "RowDefault"], 
                  FormBox[
                   TagBox["\"Monday, December 31, 1990\"", Identity], 
                   TraditionalForm]}, "RowDefault"], TraditionalForm], 
               Format[#, TraditionalForm]& ], TraditionalForm], 
             TraditionalForm], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More calendars", "input" -> 
         "Date/timeRange__More calendars"}, {}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Notable events in 1990", "scanner" -> "Date", "id" -> 
     "NotableEventForDate", "position" -> "450", "error" -> "false", 
     "numsubpods" -> "5"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{
                 FormBox[
                  TagBox["\"February 11\"", Identity], TraditionalForm], 
                 "\": \""}, "RowDefault"], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              TagBox[
               TagBox[
               "\"Nelson Mandela is released from prison after 27 years\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, 
                   "NelsonMandelaReleasedPrisonAfter27Years"}]], Identity]}, 
             "RowDefault"], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{
                 FormBox[
                  TagBox["\"March 11\"", Identity], TraditionalForm], 
                 "\": \""}, "RowDefault"], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              TagBox[
               TagBox[
               "\"Lithuania delcares independence from the Soviet Union\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, 
                   "LithuaniaDeclaresIndependenceSovietUnion"}]], Identity]}, 
             "RowDefault"], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{
                 FormBox[
                  TagBox["\"July 27\"", Identity], TraditionalForm], 
                 "\": \""}, "RowDefault"], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              TagBox[
               TagBox[
               "\"Belarusian SSR declares independence from the Soviet \
Union\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, 
                   "BelarusDeclaresIndependence1990"}]], Identity]}, 
             "RowDefault"], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              FormBox[
               TemplateBox[{
                 StyleBox[
                  TemplateBox[{
                    FormBox[
                    TagBox["\"August 2\"", Identity], TraditionalForm], 
                    "\": \""}, "RowDefault"], {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False], "\"\"", 
                 TagBox[
                  TagBox["\"Persian Gulf War\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {$CellContext`HistoricalEventData, 
                    "PersianGulfWar"}]], Identity], "\" begins\""}, 
                "RowDefault"], TraditionalForm], 
              Format[#, TraditionalForm]& ], TraditionalForm], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{
                 FormBox[
                  TagBox["\"October 17\"", Identity], TraditionalForm], 
                 "\": \""}, "RowDefault"], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              TagBox[
               TagBox["\"Internet Movie Database launches\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`HistoricalEventData, 
                   "IMDbLaunches"}]], Identity]}, "RowDefault"], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "NotableEventForDate__More"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Calendar", "scanner" -> "Date", "id" -> 
     "CalendarImage", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"January\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False]}, {
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False]}, {
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False]}, {
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False]}, {
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"February\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False]}, {
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False]}, {
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False]}, {
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False]}, {
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"March\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False]}, {
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False]}, {
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False]}, {
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False]}, {
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"April\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False]}, {
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False]}, {
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False]}, {
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False]}, {
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"May\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False]}, {
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False]}, {
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False]}, {
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False]}, {
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"June\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False]}, {
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False]}, {
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False]}, {
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False]}, {
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"July\"", FontSize -> 11.5, FontFamily -> "Helvetica", 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False]}, {
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False]}, {
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False]}, {
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False]}, {
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"August\"", FontSize -> 11.5, FontFamily -> "Helvetica",
                     StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False]}, {
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False]}, {
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False]}, {
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False]}, {
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"September\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False]}, {
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False]}, {
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False]}, {
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False]}, {
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False]}, {
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"October\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False]}, {
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False]}, {
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False]}, {
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False]}, {
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"November\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False], 
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False]}, {
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False], 
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False]}, {
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False], 
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False]}, {
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False], 
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False]}, {
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False], 
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"December\"", FontSize -> 11.5, FontFamily -> 
                    "Helvetica", StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox["\"Su\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Mo\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Tu\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"We\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Th\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Fr\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox["\"Sa\"", 
                    GrayLevel[0.5], StripOnInput -> False], "Label", 
                    StripOnInput -> False]}, {
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["1", "Label", StripOnInput -> False]}, {
                    StyleBox["2", "Label", StripOnInput -> False], 
                    StyleBox["3", "Label", StripOnInput -> False], 
                    StyleBox["4", "Label", StripOnInput -> False], 
                    StyleBox["5", "Label", StripOnInput -> False], 
                    StyleBox["6", "Label", StripOnInput -> False], 
                    StyleBox["7", "Label", StripOnInput -> False], 
                    StyleBox["8", "Label", StripOnInput -> False]}, {
                    StyleBox["9", "Label", StripOnInput -> False], 
                    StyleBox["10", "Label", StripOnInput -> False], 
                    StyleBox["11", "Label", StripOnInput -> False], 
                    StyleBox["12", "Label", StripOnInput -> False], 
                    StyleBox["13", "Label", StripOnInput -> False], 
                    StyleBox["14", "Label", StripOnInput -> False], 
                    StyleBox["15", "Label", StripOnInput -> False]}, {
                    StyleBox["16", "Label", StripOnInput -> False], 
                    StyleBox["17", "Label", StripOnInput -> False], 
                    StyleBox["18", "Label", StripOnInput -> False], 
                    StyleBox["19", "Label", StripOnInput -> False], 
                    StyleBox["20", "Label", StripOnInput -> False], 
                    StyleBox["21", "Label", StripOnInput -> False], 
                    StyleBox["22", "Label", StripOnInput -> False]}, {
                    StyleBox["23", "Label", StripOnInput -> False], 
                    StyleBox["24", "Label", StripOnInput -> False], 
                    StyleBox["25", "Label", StripOnInput -> False], 
                    StyleBox["26", "Label", StripOnInput -> False], 
                    StyleBox["27", "Label", StripOnInput -> False], 
                    StyleBox["28", "Label", StripOnInput -> False], 
                    StyleBox["29", "Label", StripOnInput -> False]}, {
                    StyleBox["30", "Label", StripOnInput -> False], 
                    StyleBox["31", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False], 
                    StyleBox["\"\"", "Label", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}, "Rows" -> {
                    GrayLevel[0.6], {
                    GrayLevel[0.96]}, 
                    GrayLevel[0.6]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1}}, "Rows" -> {{0.2}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{2}}}], 
             "Grid"], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}]}], 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, 
   Typeset`pod35$$, Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
InventionDataSourceInformationNotes.html", "text" -> "Invention data"}, {}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
InventionDataSourceInformationNotes.html", "text" -> 
        "Invention data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "5", "datatypes" -> 
     "Invention", "timedout" -> "Date,PlanetaryAstronomy,Data", 
     "timedoutpods" -> "", "timing" -> "4.191", "parsetiming" -> "0.346", 
     "parsetimedout" -> "false", "recalculate" -> 
     "http://www5a.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa20551i4138c4g5e6788a00003d7dhibid507edd9&s=60", "id" -> 
     "MSPa20561i4138c4g5e6788a000038a6ffeah20b9bh6", "host" -> 
     "http://www5a.wolframalpha.com", "server" -> "60", "related" -> 
     "http://www5a.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa20571i4138c4g5e6788a00005bcbfd70ch06i66c&s=60", "version" -> "2.6"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
     "HistoricalEvent,Invention", "timedout" -> "", "timedoutpods" -> "", 
     "timing" -> "3.004", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www5a.wolframalpha.com", "server" -> "60", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2015, 9, 8, 12, 7, 31.811741`8.255162418626888}, "Line" -> 71, 
    "SessionID" -> 18932344380031931207}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6}, Typeset`failedpods$$ = {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
   19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35}, 
   Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Output", "DateObject[{1990}]"}, Typeset`open$$ =
    False, Typeset`newq$$ = "invention of world wide web"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$}, Typeset`chosen$$,
         Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{239., {60., 22.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$}, 
         Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www5a.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa20551i4138c4g5e6788a00003d7dhibid507edd9&s=60", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell["\<\
It is impossible to study anything that happened after the invention of the \
web without computers (because of born-digital sources). As traditional \
sources are digitized, it becomes increasingly difficult to study earlier \
periods, too.\
\>", "Text",
 CellChangeTimes->{{3.650717048329159*^9, 3.650717061032185*^9}, {
  3.650717203268608*^9, 3.6507173631416607`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Now is different: Wikipedia", "Section",
 CellChangeTimes->{{3.650714893549872*^9, 3.650714894901909*^9}, {
  3.650715040041296*^9, 3.650715042648485*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "number of articles in English language Wikipedia", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"English\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {LanguageData, "English"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"Wikipedia size\""}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Data", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["3.661", 
                    Global`TagBoxWrapper["StringBoxes" -> "3.661"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily :> 
                    Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 1000000& , AutoDelete -> 
                    True]}], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"articles\"", {
                    FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller,
                     LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"rank\"", "\": \"", 
                    TagBox[
                    SuperscriptBox["1", "\"st\""], 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"1", "\"st\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                   FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], "\"  \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{
                    FormBox[
                    TagBox["\"2011\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                  "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
             LineIndent -> 0], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "History", "scanner" -> "Data", "id" -> 
     "History:WikipediaArticleCount:LanguageData", "position" -> "300", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GraphicsComplexBox[CompressedData["
1:eJw11ws0lNv7B3C3zDCGXEdR6OKUJne523u7UxyURG5HKkVuCUkoopsuToTI
NSRF6qgQRqWSxAxFjDIzh/cVFaJS6bf/a/3PrDVr1rvWrP3u/T6f/X32qxEU
4bFbREhI6Cv+/t9vSdwDt4gf4+hun1Jx9XQp2CJeZCorTqDkLrXrljtrgONG
N6VcWQLNpa2LaHW4A2bMzu3ZqUqgBz9sfrvT7gOmYng1oUmgbOkQs28NzaAh
YxnPR59A4xo9Txb4beDTe/dMCUsCsY5y7YLmH4F4tiez0JFAsqc9D38XfwYu
XPjRsrCVQEE6W8NzxLqAl5H2k0v+BIosPql8+uErEB7NbJXfT6DbpRHdkfxe
YJhzj/kqhkDqom8Ti79wwKl0Qea2ZAKlBVnGueW+AdoyXF7LaQI1D93abHBm
CBxPCrqxO5tArql1nlFm74Bm+p2908UE8ln1XjWqYBT4+FQwHGoINKX0JMIt
iw8sFDXNBxsINFyYZ27tMAYiQqI83NoJtM54THljCwncSp24oi8J9GV12Guh
hUlwPGZqZ8EAgbbL5Awfs/wMbOQNuhf5eD79Wc8H5qZBfe6Su4UfCdSVHf5q
PHsWRDeUZWosEOjMvK13UNgceN/Y/XZUjES6JxKMKld/BSNnrqiEyZDIwbql
YzP7G2DOGbgNLSeRsXY4O+HaAlhv5/0tfS2JTByP6sZ4/wSxG50vMfRIpHDx
G/Wb3iLw4A2vjrYgkaoYejElJAS5R39qSjiQqGG7UZPtoBC8f3t8xQkPEj1s
CyDePxKG1l0BJy39SNTFemDFuyoCd945PNa6l0T+pltFdh8ShU/0A0z+OEgi
4YLlSff9xCA3t/dX51ES9ZJ29MRNS6D9ZZl7W0+RSNpvjVy8hjj0S3zLV75E
osNNe7QEP8WhqLaDWNVVEmk+StQQ7aPAhbhkZdVqEm1s+5u4lESFRVW2xV13
SfTzYvleraUSMDuqXyWojUSrVqbJfLwpAZdTqGdYL0gUGBxytddRErqkPj3g
95pEOcFhsy6DkrD3softyCiJ9sn1Nzf506DY3/vPXZkkEU3dX0e5hQY7fNZ0
rfpKovRbRv9cUpGCA43Xf50TmUD8yS2mIsekYJ5wc6kxfQLlK5jtrHwnBQNO
2hetWDaB7Bwmt7s60eG8FdOuTQjX3+3KmpiKShDVbdNRwiSQ3noxfixoBR53
/zGuNyaQv6x+nqNSO7g7yPHlWBNIKS3v3c3FJ8BdbOZQVAT2ZMXxLehjA39p
V65sAoGu1dMS4jv6AfxcAwoqCFRW4NEReJkHXhjvWX/hNoGYOy4EBN8SAN3+
pTGBeSRya52+djCEAhc9dkkHlZPI1FDlbI4uFZ6n0wdXDJOIy/LUL/uDBvdn
+5MW4yTalLdsft85GvxpK1yiJT+BPm2UH0xQoMMtQzOdjMVx9F7OO0hmyzXQ
Pb3D5Ml6AlWrNJwz/vEQiF0dPytuRKALqZW3HI+wgAdX7tBHQKBlx5rkTi48
BoHm5/PbwwjEjSzJFvdlAye2yInIOALx30YfOcvtAwbmdZyOMgIlBeRNE8t4
QM4pvfjDLQI1eeve2EoRgI6quRvNOSTysWQSN/QpMAV6SpwoIRH8OOJ3WYIK
wx33l1kOkshMfjQrXogGr+YM5GQKSNTnGTeYFUuDzmUjGnpLJxAs0VwuuyAF
FW5ob0vSIZCvynWVIdQGijtTeX5mOE+eZkR4ij8C1i+3uatH4+cvtWSNvgsH
uFy7fiPqOoGeDtKuDCjwQZqmfb3hXQJt+HHJhZPwL8gXZlqIFZDIDt3bZX6V
AuvYtdKLIyTycqrK0LejwVtjq9XXKE2gosbflwXadBi7/nXmo5/jaMessTB3
ZTk4mrprevs6AqkpnhcwvB8CblbKvToDnEds88YSHRZQD9AXTrQiEEzewjwU
/xiMv+YyQ0PxfE5R65vU2MDKkDugFkug/nDNRKV9faDm/e0VvqUEet1mQdk4
NAoa3JV8824SaNv9BDq7iw+y5Iin+7NJFJPoJPGMQYHWxt3pSsUkekkoymhP
U+DIv7knX74h0ccmTRv+pCQ0uZw9ZcQn0WpDzc2V+2kw2sMl6K70BJrxqTMb
npSC7Ram9KXaeL46GzJzRlvB4VZVOtWUQIGTvmJ/nmsHnSFl/GeRBJpdGwbH
l3JAh/ONOfEqvF7z2jrV1zywTuf1AV49gTjXs15fUfgX7A5duaM+n0TOKX1p
XqkUqB45MpvJJRFbIDt1wIQG+7OzAisVJpBDzKn7tRp0uOG6a5DvJgLtNpQv
+9TBAgNFkLo8HD8fL7PD7rlsEA7nBZZ1BEoXP0cwHQWg1Wn4zGwpiSxlf31R
WkGFi9XmLTffkiht/xUeXYEGm/TEW+MOEmhmtpBy9BQHpBv/866YMYE+CsXG
LbOgw7M9DhHLcP3igit7bE6WgW1dxMuiPwhUcvGIDJX6EDjTX3YtwfULX1gC
uyVYgKpu/bQd97NbiwoPQo0fg+o1S2JbcX9aq2QBc4TZwHR35/G4QwRaMElJ
HNLuA/vu1LdXlBAoN0pa7lXTKKBuHzH9jPtN8XiR1cVaPoh3GO1n4bwUVh1Y
tl2SAkvrT9sFFJHok6dTbi6PAnMMdY8o4vo5XXC6osyXhGmML8qneSSyLvuV
ejuYBsWr00TmcX51Gs91ojEpmH+ihdyxkUB1NYz76RdawZjpvlV+JgSiJT/t
3uzRDs41dDJX4Pol1xd1s2bYIHVFTb57JYFGP6Q0tTTwQILB1c2muH6ax2RV
UkYFwLmYsUcC169dbVf2v4cocKDl0Fg/zpvzU/pvD+jRYMjUcyES5wvDvdtR
UYUOc1dfibuN84Phy12nWsICBVN73cMPEMhdcIDCTGCDNtuW9ku1BIrQoiVc
WiMA6k9ynS1w/Z78PrDeS54KG76z6+bw/h+xajGzkaTBpOSN1C68f91SerO9
Qjlg+fnJZB7efx3cRkqyER0Gu7gmWeN8oZ7yHJab4IPRJtlnL7H/7CO8E49+
U6C4SmJ+TBSB9uaZ1EvpcECIhoOwPd7Pigw/sx4rGmzRFnGh4Pyul3Ja8WiS
BVQttCnj2Je+jky54xEB+MYfObQanzdYEX96mz3ggJl3R0GA8gRSXKM3fsea
DpXKhQIf4/OTpmqAyVeLMtAWucHCFvtR6Zlek/KuGaQ4H/Sqw+ehDdIfjgvm
20CikLPWHuxnt9Xh32NKj8HZF7n5+7Cf0GHPjNSZXtDwq81rNfYzuuLmz4ey
feCZqoHiFuxHxjmOoV4zCvR2tFddwX7sk/XffC7mg4lRru8B7OdOqNqqQlEK
9PhMlItiP8ek+MMuQxQ4M3Qk5gHul7ELPg4GI5Kw2qtM2xD76fXZV9zwFw32
eBazc7Af4wrG3194UlBcS3jHL9zf1n3IfLm4txWoxsncpGA/Rs9+GjgbtoNI
P3/3p7ifPY5/oFjLZwNeOnNqHvevHY/JNplKHig1Ot4owP0rddLNcuapADw0
U5i6i/vXqYjqQmYEBRruYb07jP00e9mmn2TSoH7evz2nsJ/U1s9LnzHosDsQ
ifhiP30R7aH651gg6dKPQ8rYT251huuyUDYg7Uv1IPaj2F4o90VRAHpEvl5/
j/uHaFyFTZw0FcqVrKzOw35o11+N+S2hwUBNFjMW+7ls/2HY1pcDBGZUt1Ts
R38L95WePh1m/qk/NYXz9KY6ERM9hPP0e8Qf0diPuX5iZ/w3CiRYMq0rsZ+b
AR7fv6txwONnWQskzq/Zo/fki8xp8Eto1ZvbOK8i1LUDBwdZwM5KLjYL+xnO
d+1o/EsA3p6Ozn+J80dO87RDxhUOaD6TJyOE/RzL2lq7B9DhTAxzrBHXy7+o
diufpMBEhtaUHh7/9uawDgsjGrxs/XYridf7PCt+1NBAAAoG8vgaeDxa4z3X
/QkcoJt0J2Q9Xv/R3Yz4e2JUeHJ6Z7sv9jz/bdfbmt8soGS52f0w9hv1QCF0
6jUHrDMMimjB96/6R1pN2J4Oh+l+A3nYL/eb2aQbowzMt285qIT9en2q0bF4
0QxU9nUUnMB+JXL9yiOm2kDD55dDxtgv8L9RWi7+GPy6yquxwn4zW3laCxO9
YM7Jwvo7vl/KhUcWOqJ9IM79YMtK7NeoYUO+Y/kosPc2DIzCfnVeHCkrzuOD
NTq+6jbYb5G8TQUUokAtmdy+fnxe7BzXSa56Q4HFtRpRZ7DfzNpdhW1DkrDl
a4KpBPZbuqlI2zSQBu9uuGW2F/sN5q776jIqBS0SV51/hf3ukXQaaNzaCu5l
B80M4+fxPOzyHqe17eC9btWuAuy3caf9g7XDbHCxKSznOfabpHvVxqSIBxo2
fYlqxH71SiNdNzQJwHxGVt1p7DeI0a3RE0qBPNO9w5uxX46Uy7CiFg0yImZN
fLDfxnnhQxpKdLgv+ZKDHvZb/90w82EaC3zaa3dyCp+XmjIVZs7vYoNFBwVS
EddzkT4+UiYtAFUaFYP1uH4l9e1uFCkqbIt5XBGK/a7yH7D4IEKDvd8lwWbs
t3F9fErTNg54vlTp/lbsNyT1o8EZXTosdSsvf4T9Xg7TQ6v6+GC/spqXLfab
Rn8exvlCgd7Z3r2zOO97rN8VRCpzQHSBydcm7GvX7eAUcTMavHD6h2oG9pte
XXwsuIcFfEDaxhDsd9At/M3sNpz//s01pdjbq6WyweIXOaDkr8q4Htw/7z0P
lm+zpMPOv4cUM7HfioSfc5ZjuH4fXpGieHyN5GUG5QY0WGOzhdaK11s/wrop
2CAA9Br+3Dxej3ah7cz7aA6gFgbl/sDzVS0xOOEgQoWrl9ZS9HG9+o6//mE8
zwIZS7N3uWJPeQr6PPlnHECXjHxzDvt9N6mW6mNLh+lZKvxKXI+KUnPdH9o0
2Genm7Af348Zu83edoUANL5t+1qEx5/ZrrNu5U8K3Hdv3clveD0TnWE9gdUc
0G2T9jkAz9daudW7fxMNHkchBfJ4/UbNN7/vNhcA5hK33i34/0pvtG7MHuOA
KTb1aAaeHyNi+r6GRDuw9d9G+YjncyTpV2OlAx3+9z4t9P+f/94n/rv+H3t3
d5g=
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 246, 247, 50, 245, 192, 236, 148, 184, 
                    228, 112, 140, 176, 220, 84, 105, 133, 169, 213, 63, 76, 
                    97, 125, 161, 205, 49, 48, 47, 46, 62, 75, 96, 124, 160, 
                    204, 45, 83, 144, 180, 224, 104, 241, 186, 230, 132, 237, 
                    168, 212, 61, 110, 138, 174, 218, 74, 95, 123, 159, 203, 
                    44, 43, 42, 41, 40, 60, 109, 137, 173, 217, 73, 189, 233, 
                    142, 239, 178, 222, 94, 185, 229, 122, 158, 202, 39, 82, 
                    103, 131, 167, 211, 59, 72, 93, 121, 157, 201, 38, 37, 36,
                     35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 
                    21, 20, 19, 18, 81, 102, 130, 166, 210, 58, 146, 182, 226,
                     108, 242, 187, 231, 136, 238, 172, 216, 71, 141, 177, 
                    221, 92, 120, 156, 200, 17, 80, 101, 129, 165, 209, 57, 
                    70, 91, 119, 155, 199, 16, 15, 14, 13, 56, 69, 90, 118, 
                    154, 198, 12, 191, 235, 147, 240, 183, 227, 111, 243, 188,
                     232, 139, 175, 219, 79, 143, 179, 223, 100, 128, 164, 
                    208, 55, 107, 135, 171, 215, 68, 89, 117, 153, 197, 11, 
                    10, 9, 8, 54, 67, 88, 116, 152, 196, 7, 78, 99, 127, 163, 
                    207, 53, 244, 190, 234, 145, 181, 225, 106, 134, 170, 214,
                     66, 87, 115, 151, 195, 6, 77, 98, 126, 162, 206, 52, 65, 
                    86, 114, 150, 194, 5, 4, 3, 2, 51, 64, 85, 113, 149, 
                    193}}]}]}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    
                    LineBox[{1, 193, 149, 113, 85, 64, 51, 2, 3, 4, 5, 194, 
                    150, 114, 86, 65, 52, 206, 162, 126, 98, 77, 6, 195, 151, 
                    115, 87, 66, 214, 170, 134, 106, 225, 181, 145, 234, 190, 
                    244, 53, 207, 163, 127, 99, 78, 7, 196, 152, 116, 88, 67, 
                    54, 8, 9, 10, 11, 197, 153, 117, 89, 68, 215, 171, 135, 
                    107, 55, 208, 164, 128, 100, 223, 179, 143, 79, 219, 175, 
                    139, 232, 188, 243, 111, 227, 183, 240, 147, 235, 191, 12,
                     198, 154, 118, 90, 69, 56, 13, 14, 15, 16, 199, 155, 119,
                     91, 70, 57, 209, 165, 129, 101, 80, 17, 200, 156, 120, 
                    92, 221, 177, 141, 71, 216, 172, 238, 136, 231, 187, 242, 
                    108, 226, 182, 146, 58, 210, 166, 130, 102, 81, 18, 19, 
                    20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
                    34, 35, 36, 37, 38, 201, 157, 121, 93, 72, 59, 211, 167, 
                    131, 103, 82, 39, 202, 158, 122, 229, 185, 94, 222, 178, 
                    239, 142, 233, 189, 73, 217, 173, 137, 109, 60, 40, 41, 
                    42, 43, 44, 203, 159, 123, 95, 74, 218, 174, 138, 110, 61,
                     212, 168, 237, 132, 230, 186, 241, 104, 224, 180, 144, 
                    83, 45, 204, 160, 124, 96, 75, 62, 46, 47, 48, 49, 205, 
                    161, 125, 97, 76, 63, 213, 169, 133, 105, 84, 220, 176, 
                    140, 112, 228, 184, 148, 236, 192, 245, 50}]}}}], {{}, {
                  Hue[0.67, 0.6, 0.6], 
                  Directive[
                   RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                  
                  PointBox[{{3.218832*^9, 0.037}, {3.250368*^9, 0.141}, {
                   3.281904*^9, 0.306}, {3.3135264*^9, 0.632}, {3.3450624*^9, 
                   1.2}, {3.3765984*^9, 1.8}, {3.4081344*^9, 2.4}, {
                   3.4397568*^9, 3.}, {3.4712928*^9, 3.4}, {3.5028288*^9, 
                   3.660794}}]}, {}}}, {GridLines -> Dynamic[
                  Join[{{{3218832000, 
                    GrayLevel[0.9]}, {3281904000, 
                    GrayLevel[0.9]}, {3345062400, 
                    GrayLevel[0.9]}, {3408134400, 
                    GrayLevel[0.9]}, {3471292800, 
                    GrayLevel[0.9]}, {3534364800, 
                    GrayLevel[0.9]}}, {0, 1, 2, 3, 4, 5}}, 
                   Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], Epilog -> {
                  DynamicBox[
                   Typeset`ToBoxes[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[
                    1, {10, 2}, 3, {{11.334043200486766`, 11.445086705202312`,
                     11.556130209917859`, 11.667477943413447`, 
                    11.778521448128993`, 11.88956495284454, 
                    12.000608457560086`, 12.111956191055674`, 
                    12.22299969577122, 12.334043200486766`}, {
                    0.008800381801063952, 0.033536590106757226`, 
                    0.07278153597636675, 0.15032003508844374`, 
                    0.2854177881426147, 0.428126682213922, 0.5708355762852294,
                     0.7135444703565368, 0.8086837330707416, 
                    0.8707131052714625}}, {{11.334043200486766`, 
                    0.008800381801063952}, {11.445086705202312`, 
                    0.033536590106757226`}, {11.556130209917859`, 
                    0.07278153597636675}, {11.667477943413447`, 
                    0.15032003508844374`}, {11.778521448128993`, 
                    0.2854177881426147}, {11.88956495284454, 
                    0.428126682213922}, {12.000608457560086`, 
                    0.5708355762852294}, {12.111956191055674`, 
                    0.7135444703565368}, {12.22299969577122, 
                    0.8086837330707416}, {12.334043200486766`, 
                    0.8707131052714625}}, {{3.218832*^9, 0.037}, {3.250368*^9,
                     0.141}, {3.281904*^9, 0.306}, {3.3135264*^9, 0.632}, {
                    3.3450624*^9, 1.2}, {3.3765984*^9, 1.8}, {3.4081344*^9, 
                    2.4}, {3.4397568*^9, 3.}, {3.4712928*^9, 3.4}, {
                    3.5028288*^9, 3.660794}}, Automatic, 
                    Hold[
                    
                    Nearest[{{11.334043200486766`, 0.008800381801063952}, {
                    11.445086705202312`, 0.033536590106757226`}, {
                    11.556130209917859`, 0.07278153597636675}, {
                    11.667477943413447`, 0.15032003508844374`}, {
                    11.778521448128993`, 0.2854177881426147}, {
                    11.88956495284454, 0.428126682213922}, {
                    12.000608457560086`, 0.5708355762852294}, {
                    12.111956191055674`, 0.7135444703565368}, {
                    12.22299969577122, 0.8086837330707416}, {
                    12.334043200486766`, 0.8707131052714625}} -> {{
                    3.218832*^9, 0.037}, {3.250368*^9, 0.141}, {3.281904*^9, 
                    0.306}, {3.3135264*^9, 0.632}, {3.3450624*^9, 1.2}, {
                    3.3765984*^9, 1.8}, {3.4081344*^9, 2.4}, {3.4397568*^9, 
                    3.}, {3.4712928*^9, 3.4}, {3.5028288*^9, 3.660794}}]]][#/{
                    283996800, 4.204363042013331}]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (DateString[#, {"Year"}]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     2]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[
                    Part[CalculateUtilities`GraphicsUtilities`Private`scaled, 
                    1] - 0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                     TraditionalForm, Graphics]]}, FrameTicks -> {{{{0., 
                    FormBox[
                    TagBox["0", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "0"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {1., 
                    FormBox[
                    TagBox["1", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "1"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2., 
                    FormBox[
                    TagBox["2", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "2"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {3., 
                    FormBox[
                    TagBox["3", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "3"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {4., 
                    FormBox[
                    TagBox["4", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "4"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.2, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.4, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.6000000000000001, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.8, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.2, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.4, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.6, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.8, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.2, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.4, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.6, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.8, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.2, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.4, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.6, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.8, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4.2, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{0., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.2, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.4, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.6000000000000001, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.8, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.2, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.4, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.6, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.8, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.2, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.4, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.6, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.8, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.2, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.4, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.6, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.8, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4.2, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{3218832000, 
                    FormBox["\"2002\"", TraditionalForm]}, {3281904000, 
                    FormBox["\"2004\"", TraditionalForm]}, {3345062400, 
                    FormBox["\"2006\"", TraditionalForm]}, {3408134400, 
                    FormBox["\"2008\"", TraditionalForm]}, {3471292800, 
                    FormBox["\"2010\"", TraditionalForm]}, {3534364800, 
                    FormBox["\"2012\"", TraditionalForm]}, {3250368000, 
                    FormBox["\"\"", TraditionalForm]}, {3313526400, 
                    FormBox["\"\"", TraditionalForm]}, {3376598400, 
                    FormBox["\"\"", TraditionalForm]}, {3439756800, 
                    FormBox["\"\"", TraditionalForm]}, {3502828800, 
                    FormBox["\"\"", TraditionalForm]}}, {{3218832000, 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {3281904000, 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {3345062400, 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {3408134400, 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {3471292800, 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {3534364800, 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {3250368000, 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {3313526400, 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {3376598400, 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {3439756800, 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {3502828800, 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}}}}, ImagePadding -> All, 
                GridLines -> {{{3218832000, 
                    GrayLevel[0.9]}, {3281904000, 
                    GrayLevel[0.9]}, {3345062400, 
                    GrayLevel[0.9]}, {3408134400, 
                    GrayLevel[0.9]}, {3471292800, 
                    GrayLevel[0.9]}, {3534364800, 
                    GrayLevel[0.9]}}, Automatic}, PlotRangePadding -> None, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                AxesOrigin -> {3.25*^9, 0}, AxesStyle -> Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1], Frame -> 
                True, FrameLabel -> {None, None}, FrameStyle -> Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], FrameTicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10], 
                GridLines -> {{{3218832000, 
                    GrayLevel[0.9]}, {3281904000, 
                    GrayLevel[0.9]}, {3345062400, 
                    GrayLevel[0.9]}, {3408134400, 
                    GrayLevel[0.9]}, {3471292800, 
                    GrayLevel[0.9]}, {3534364800, 
                    GrayLevel[0.9]}}, Automatic}, GridLinesStyle -> 
                GrayLevel[0.9], ImageSize -> 250, 
                LabelStyle -> {FontFamily -> "Verdana", FontSize -> 10}, 
                Method -> {"AxesInFront" -> True}, 
                PlotRange -> {{3218832000, 3502828800}, {
                  0, 4.204363042013331}}, PlotRangeClipping -> True, 
                PlotRangePadding -> None, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                TicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10]}], 
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    FormBox[
                    TagBox[
                    FormBox[
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"2002\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2011\"", Identity], TraditionalForm]}, 
                    "RowDefault"], TraditionalForm], 
                    Format[#, TraditionalForm]& ], TraditionalForm], 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}, {
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"in \"", "\"millions\""}, "RowDefault"], 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Right", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Center", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output", {
          Background -> None}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Log scale", "input" -> 
         "History:WikipediaArticleCount:LanguageData__Log scale"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "MultiClash", "word" -> "", "template" -> 
        "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "EnglishWord", "word" -> "number", "desc" -> "a word", 
          "input" -> "*MC.number+of-_*EnglishWord-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathMiscWord", "word" -> "number of", "desc" -> 
          " referring to math", "input" -> 
          "*MC.number+of-_*MathMiscWord-"}, {}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
LanguageDataSourceInformationNotes.html", "text" -> "Language data"}, {}]}]}, 
   Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
    "Language", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.045", 
    "parsetiming" -> "1.58", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "MSPa11721i3i2i6e797ib44200002i87640a5hbbhcfh", "host" -> 
    "http://www5b.wolframalpha.com", "server" -> "37", "related" -> 
    "http://www5b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa11731i3i2i6e797ib442000055465eg4a89a8543&s=37", "version" -> "2.6"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2015, 9, 8, 11, 31, 46.80373`8.422855441949546}, "Line" -> 52, 
    "SessionID" -> 18932344380031931207}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Content"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "number of articles in English language Wikipedia"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{411., {35., 22.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell["daily visitors of wikipedia", "WolframAlphaLong",
 CellChangeTimes->{{3.650714220552452*^9, 3.6507142305336437`*^9}}],

Cell[CellGroupData[{

Cell["The Filter Bubble", "Subsection",
 CellChangeTimes->{{3.650717542423122*^9, 3.650717545111285*^9}}],

Cell["\<\
Search engines and sites like Wikipedia provide a pervasive source of \
research bias\
\>", "Text",
 CellChangeTimes->{{3.6507174056447144`*^9, 3.65071744802664*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TextSentences", "[", 
   RowBox[{"WikipediaData", "[", "\"\<Filter Bubble\>\"", "]"}], "]"}], 
  "\[LeftDoubleBracket]", 
  RowBox[{";;", "5"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.650717451196446*^9, 3.6507175354727993`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Now is different: Energy", "Section",
 CellChangeTimes->{{3.65071678193889*^9, 3.650716792449769*^9}}],

Cell["Energy consumption is growing exponentially", "Text",
 CellChangeTimes->{{3.6507168310890083`*^9, 3.650716866375186*^9}}],

Cell["world energy consumption", "WolframAlphaLong",
 CellChangeTimes->{{3.6507167949807053`*^9, 3.6507167991054363`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Now is different: The Economy", "Section",
 CellChangeTimes->{{3.650709190960794*^9, 3.650709201056493*^9}, {
  3.650712047980225*^9, 3.650712052723309*^9}}],

Cell["The economy is growing exponentially", "Text",
 CellChangeTimes->{{3.6507168735506477`*^9, 3.650716879086699*^9}}],

Cell["world income", "WolframAlphaLong",
 CellChangeTimes->{{3.6507169118643417`*^9, 3.650716919957176*^9}, {
  3.650716957685054*^9, 3.650716959219746*^9}}],

Cell["world gdp per capita", "WolframAlphaLong",
 CellChangeTimes->{{3.650710993754717*^9, 3.650711003400436*^9}, {
   3.650711058038916*^9, 3.650711079773682*^9}, 3.6507111213814898`*^9, {
   3.650711434522519*^9, 3.6507114376250668`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["About this course", "Title",
 CellChangeTimes->{{3.650733207119388*^9, 3.650733208830571*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Starting in the middle", "Section",
 CellChangeTimes->{{3.650709136659565*^9, 3.650709139594612*^9}, {
   3.650712081530959*^9, 3.6507120819942617`*^9}, 3.6507175646561413`*^9}],

Cell["\<\
Digital research methods sit in between two vast spaces. On the one side, we \
have an archive of digital information which is effectively infinite. On the \
other side, there is a vast repository of algorithms, programming techniques \
and applicable mathematics. Both spaces are growing exponentially and are \
already too big to master in a lifetime.\
\>", "Text",
 CellChangeTimes->{{3.650717568654254*^9, 3.650717607149091*^9}, {
  3.6507176397318993`*^9, 3.650717812773958*^9}}],

Cell["\<\
The best approach is to start with very specific goals and interests and work \
outward, constantly developing new skills.\
\>", "Text",
 CellChangeTimes->{{3.6507178415727158`*^9, 3.6507179219139433`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Everything is fair game", "Section",
 CellChangeTimes->{{3.650709313037093*^9, 3.6507093168843803`*^9}}],

Cell["\<\
History is not the past, it is what we make of the past in the present. In \
this course, any source from any point in the past is fair game. The only \
requirement is that you have digital sources and that you think about them \
historically.\
\>", "Text",
 CellChangeTimes->{{3.6507179490815487`*^9, 3.650717995471217*^9}, {
  3.6507359694146757`*^9, 3.650735984420497*^9}}],

Cell[CellGroupData[{

Cell["Comics", "Subsection",
 CellChangeTimes->{{3.6507180093267736`*^9, 3.6507180099108763`*^9}}],

Cell[TextData[ButtonBox["digitalcomicmuseum.com",
 BaseStyle->"Hyperlink",
 ButtonData->{"digitalcomicmuseum.com", None}]], "Text",
 CellChangeTimes->{{3.6507184385179768`*^9, 3.6507184524051647`*^9}}],

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"TakeLargestBy", "[", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<http://digitalcomicmuseum.com/preview/index.php?did=17932&page=2\>\"\
", ",", "\"\<Images\>\""}], "]"}], ",", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"ImageDimensions", "[", "#", "]"}], "]"}], "&"}], ",", "1"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6507180670064983`*^9, 3.6507180887238827`*^9}, {
   3.650718134595069*^9, 3.650718142849813*^9}, 3.681062181155142*^9, 
   3.6810622160493298`*^9, {3.681062263775964*^9, 3.681062275798772*^9}, {
   3.681062355949112*^9, 3.6810624181459217`*^9}, {3.681062458945505*^9, 
   3.68106245982437*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["UFO Reports", "Subsection",
 CellChangeTimes->{{3.6507184334230947`*^9, 3.6507184353022003`*^9}}],

Cell[TextData[ButtonBox["https://www.collectionscanada.gc.ca/databases/ufo/\
index-e.html",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.collectionscanada.gc.ca/databases/ufo/index-e.html"], 
   None},
 ButtonNote->
  "https://www.collectionscanada.gc.ca/databases/ufo/index-e.html"]], "Text",
 CellChangeTimes->{{3.65071852446255*^9, 3.650718530889195*^9}}],

Cell[BoxData[
 RowBox[{"ImageResize", "[", 
  RowBox[{
   RowBox[{
   "Import", "[", 
    "\"\<http://data2.collectionscanada.gc.ca/e/e110/e002744315.jpg\>\"", 
    "]"}], ",", "600"}], "]"}]], "Input",
 CellChangeTimes->{{3.6507184684635973`*^9, 3.6507184951408873`*^9}, {
  3.650718621272279*^9, 3.650718636590682*^9}, {3.650718789245442*^9, 
  3.650718798261479*^9}, {3.6507190749098454`*^9, 3.650719088125195*^9}, {
  3.6507229136637793`*^9, 3.650722933998015*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lyrics", "Subsection",
 CellChangeTimes->{{3.650718537658948*^9, 3.6507185405539618`*^9}}],

Cell[TextData[ButtonBox["www.mldb.org",
 BaseStyle->"Hyperlink",
 ButtonData->{"www.mldb.org", None}]], "Text",
 CellChangeTimes->{{3.650718687068362*^9, 3.6507186955333967`*^9}}],

Cell[BoxData[
 RowBox[{"StringTake", "[", 
  RowBox[{
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<http://www.mldb.org/song-205656-alphabet-aerobics.html\>\"", ",", 
     "\"\<Plaintext\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"676", ",", "1199"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650718647336635*^9, 3.6507186625778503`*^9}, {
  3.650718736035491*^9, 3.650718736712412*^9}, {3.6507188097038527`*^9, 
  3.650719024615686*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Magazines", "Subsection",
 CellChangeTimes->{{3.6507343325242853`*^9, 3.650734340883245*^9}}],

Cell["The Pulp Magazine Archive at the Internet Archive", "Text",
 CellChangeTimes->{{3.681062953991437*^9, 3.6810629546547613`*^9}, {
  3.6810637942507887`*^9, 3.681063806465383*^9}}],

Cell[TextData[ButtonBox["https://archive.org/details/pulpmagazinearchive&tab=\
collection",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://archive.org/details/pulpmagazinearchive&tab=collection"], 
   None},
 ButtonNote->
  "https://archive.org/details/pulpmagazinearchive&tab=collection"]], "Text",
 CellChangeTimes->{{3.681063818141028*^9, 3.681063826865081*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"iaPageSource", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://archive.org/details/pulpmagazinearchive?and[]=subject%3A%\
22science+fiction%22\>\"", ",", "\"\<Source\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.681063375412417*^9, 3.6810633853611*^9}}],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"ConformImages", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{"\"\<https://archive.org\>\"", "<>", "#"}], "]"}], "&"}], "/@", 
      RowBox[{
       RowBox[{"StringCases", "[", 
        RowBox[{"iaPageSource", ",", 
         RowBox[{
          RowBox[{"Shortest", "[", 
           RowBox[{
           "\"\<<img class=\\\"item-img\\\" source=\\\"\>\"", "~~", "link__", 
            "~~", "\"\<\\\"\>\""}], "]"}], "\[Rule]", "link"}]}], "]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"1", ";;", "21"}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
    "7"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.681062959848508*^9, 3.681062972598546*^9}, {
  3.68106313487433*^9, 3.681063180415577*^9}, {3.681063278973324*^9, 
  3.681063468173883*^9}, {3.681063503757016*^9, 3.681063566689983*^9}, {
  3.681063675959779*^9, 3.6810637292842627`*^9}, {3.681063759980451*^9, 
  3.681063775282958*^9}, {3.681063916703423*^9, 3.6810639691962643`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Social networks", "Subsection",
 CellChangeTimes->{{3.650734788763034*^9, 3.650734793162039*^9}}],

Cell["Marriage network between Florentine families", "Text",
 CellChangeTimes->{{3.650734829729229*^9, 3.650734836976244*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", " ", "\"\<FlorentineFamilies\>\""}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.650734799437132*^9, 3.650734816876645*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["TV Episodes", "Subsection",
 CellChangeTimes->{{3.650735022969843*^9, 3.650735045664288*^9}}],

Cell[TextData[{
 StyleBox["Doctor Who",
  FontSlant->"Italic"],
 " Time Travel Journeys from the ",
 StyleBox["Guardian",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.6507350479441137`*^9, 3.650735062031622*^9}}],

Cell[TextData[ButtonBox["https://docs.google.com/spreadsheets/d/\
1NubZNu9pQm5AvTVtNxaddW0PJ8kFN2-o2XNnTB9u5U0/edit#gid=26",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://docs.google.com/spreadsheets/d/\
1NubZNu9pQm5AvTVtNxaddW0PJ8kFN2-o2XNnTB9u5U0/edit#gid=26"], None},
 ButtonNote->
  "https://docs.google.com/spreadsheets/d/1NubZNu9pQm5AvTVtNxaddW0PJ8kFN2-\
o2XNnTB9u5U0/edit#gid=26"]], "Text",
 CellChangeTimes->{{3.6507350890193043`*^9, 3.650735095620677*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"drWhoTimeTravelJourneys", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://docs.google.com/spreadsheets/d/\
1NubZNu9pQm5AvTVtNxaddW0PJ8kFN2-o2XNnTB9u5U0/edit#gid=26\>\"", ",", 
     "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.650734527295731*^9, 3.650734568594743*^9}, {
  3.6507349162543373`*^9, 3.650734928900971*^9}, {3.650734964012555*^9, 
  3.6507350056980877`*^9}}],

Cell[BoxData[
 RowBox[{"Style", "[", 
  RowBox[{
   RowBox[{"TableForm", "[", 
    RowBox[{"drWhoTimeTravelJourneys", "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "2", ",", 
      RowBox[{"1", ";;", "24"}], ",", 
      RowBox[{"3", ";;", "6"}]}], "\[RightDoubleBracket]"}], "]"}], ",", 
   "Medium"}], "]"}]], "Input",
 CellChangeTimes->{{3.6507351059108973`*^9, 3.650735124661393*^9}, {
   3.650735156300311*^9, 3.650735291423059*^9}, {3.6507353557180433`*^9, 
   3.650735370458987*^9}, 3.650735408251493*^9, {3.65073546916932*^9, 
   3.650735470280259*^9}, {3.650735587060875*^9, 3.650735618218482*^9}, 
   3.650735650985466*^9, 3.650735681944253*^9, {3.650735712808049*^9, 
   3.650735741853932*^9}, 3.6507357825255327`*^9, {3.650735830155602*^9, 
   3.650735835898341*^9}}],

Cell[TextData[{
 "See also the ",
 StyleBox["Guardian",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s dataset of ",
 StyleBox["Doctor Who",
  FontSlant->"Italic"],
 " villains and monsters"
}], "Text",
 CellChangeTimes->{{3.650735848010386*^9, 3.650735888192151*^9}, {
  3.681062640897534*^9, 3.681062642017488*^9}}],

Cell[TextData[ButtonBox["https://docs.google.com/spreadsheet/ccc?key=\
0AonYZs4MzlZbdHJNSVh6clE4MVR4OHhqZWs4WGpSZlE #gid=0",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://docs.google.com/spreadsheet/ccc?key=\
0AonYZs4MzlZbdHJNSVh6clE4MVR4OHhqZWs4WGpSZlE#gid=0"], None},
 ButtonNote->
  "https://docs.google.com/spreadsheet/ccc?key=\
0AonYZs4MzlZbdHJNSVh6clE4MVR4OHhqZWs4WGpSZlE#gid=0"]], "Text",
 CellChangeTimes->{{3.650735860244808*^9, 3.650735867072603*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Thinking historically", "Section",
 CellChangeTimes->{{3.6507359165277643`*^9, 3.650735918542993*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]The concepts of change over time, causality, context, \
complexity, and contingency, we believe, together describe the shared \
foundations of our discipline.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.650736552979932*^9, 3.6507365587828207`*^9}}],

Cell["Change over time", "Subsection",
 CellChangeTimes->{{3.650736053130002*^9, 3.650736055121895*^9}}],

Cell[CellGroupData[{

Cell["Context", "Subsection",
 CellChangeTimes->{{3.650736067290173*^9, 3.650736068297381*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]Texts, events, individual lives, collective struggles\
\[LongDash]all develop within a tightly interwoven world.\
\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.6507362510910873`*^9, 3.650736263662953*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Causality", "Subsection",
 CellChangeTimes->{{3.650736075481843*^9, 3.650736083096828*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]While scientists can devise experiments to test \
theories and yield data, historians cannot alter past conditions to produce \
new information. Rather, they must base their arguments upon the \
interpretation of partial primary sources that frequently offer multiple \
explanations for a single event.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.650736269490378*^9, 3.6507362696898203`*^9}, 
   3.650736304765609*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Contingency", "Subsection",
 CellChangeTimes->{{3.650736087512683*^9, 3.650736089888595*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]To argue that history is contingent is to claim that \
every historical outcome depends upon a number of prior conditions; that each \
of these prior conditions depends, in turn, upon still other conditions; and \
so on. The core insight of contingency is that the world is a magnificently \
interconnected place. Change a single prior condition, and any historical \
outcome could have turned out differently.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.6507363241204453`*^9, 3.6507363243197727`*^9}, 
   3.650736355547839*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complexity", "Subsection",
 CellChangeTimes->{{3.6507360957362957`*^9, 3.6507360968962297`*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]Moral, epistemological, and causal complexity \
distinguish historical thinking from the conception of \
\[OpenCurlyDoubleQuote]history\[CloseCurlyDoubleQuote] held by many \
non-historians. Re-enacting battles and remembering names and dates require \
effort but not necessarily analytical rigor. Making sense of a messy world \
that we cannot know directly, in contrast, is more confounding but also more \
rewarding.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.650736414436298*^9, 3.650736414628346*^9}, {
  3.650736503165245*^9, 3.650736509449678*^9}}],

Cell[CellGroupData[{

Cell["Reference", "Subsubsection",
 CellChangeTimes->{{3.6507364079004717`*^9, 3.650736409628518*^9}}],

Cell["\<\
If you haven\[CloseCurlyQuote]t studied history at the university level \
before, be sure to read the following article carefully\
\>", "Text",
 CellChangeTimes->{{3.650736030371522*^9, 3.6507360306987133`*^9}, {
  3.650736106400796*^9, 3.650736123759335*^9}, {3.650736401668828*^9, 
  3.65073640374868*^9}, {3.650736639060749*^9, 3.650736644683792*^9}}],

Cell[TextData[{
 "Thomas Andrews and Flannery Burke, \[OpenCurlyDoubleQuote]What Does it Mean \
to Think Historically?\[CloseCurlyDoubleQuote] ",
 StyleBox["AHA Perspectives on History",
  FontSlant->"Italic"],
 " (Jan 2007)",
 "\n",
 ButtonBox["https://www.historians.org/publications-and-directories/\
perspectives-on-history/january-2007/what-does-it-mean-to-think-historically",
  
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.historians.org/publications-and-directories/perspectives-\
on-history/january-2007/what-does-it-mean-to-think-historically"], None},
  ButtonNote->
   "https://www.historians.org/publications-and-directories/perspectives-on-\
history/january-2007/what-does-it-mean-to-think-historically"]
}], "Text",
 CellChangeTimes->{{3.650736369742733*^9, 3.650736392637301*^9}, 
   3.650736634959412*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Discussion", "Section",
 CellChangeTimes->{{3.65070961329856*^9, 3.650709614349741*^9}}],

Cell["Questions about the course", "Text",
 CellChangeTimes->{{3.650709627081338*^9, 3.650709629361326*^9}}],

Cell["What kind of things are you interested in?", "Text",
 CellChangeTimes->{{3.650709594363233*^9, 3.650709600914091*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["This is not a slide presentation", "Title",
 CellChangeTimes->{{3.650708846621007*^9, 3.650708852764875*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Why ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "?"
}], "Section",
 CellChangeTimes->{
  3.6507096600222816`*^9, {3.650736783710416*^9, 3.6507367867104483`*^9}}],

Cell[CellGroupData[{

Cell["Notebooks", "Subsection",
 CellChangeTimes->{{3.6507096679445763`*^9, 3.650709669631777*^9}, 
   3.6507367797187567`*^9}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebooks let you mix text, datasets, images, graphs, interactive \
interface elements, etc."
}], "Text",
 CellChangeTimes->{{3.650736729128456*^9, 3.650736799653903*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computable data", "Subsection",
 CellChangeTimes->{{3.650709232991872*^9, 3.650709241255023*^9}, 
   3.6507367941980343`*^9}],

Cell["\<\
You can draw live data from the Internet, WolframAlpha, Wikipedia, the Open \
Library, social media sites (Twitter, Facebook) and many other sources in \
real time, and use it for further computation\
\>", "Text",
 CellChangeTimes->{{3.650736804901651*^9, 3.65073690321803*^9}}]
}, Open  ]],

Cell["Machine-readable sources", "Subsection",
 CellChangeTimes->{{3.650709352091709*^9, 3.6507093555070868`*^9}, {
   3.650709424552493*^9, 3.6507094351440887`*^9}, 3.6507369085537243`*^9}],

Cell[CellGroupData[{

Cell["Cells", "Subsection",
 CellChangeTimes->{{3.6810605899141827`*^9, 3.681060590426218*^9}}],

Cell[TextData[{
 "You work in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " by typing stuff into cells. This is a ",
 StyleBox["Text",
  FontSlant->"Italic"],
 " cell. Use text cells for your own notes and ideas."
}], "Text",
 CellChangeTimes->{{3.681060226616029*^9, 3.681060281701462*^9}}],

Cell["\<\
You can select a cell by clicking on its cell bracket, on the far right. When \
a cell is selected, its cell bracket is blue.\
\>", "Text",
 CellChangeTimes->{{3.681060289933083*^9, 3.681060364962411*^9}, {
  3.6810608235639467`*^9, 3.6810608246345377`*^9}}],

Cell[TextData[{
 "You give Mathematica commands by typing them into an ",
 StyleBox["Input",
  FontSlant->"Italic"],
 " cell, like the one below. Note that input cells are displayed with a \
different font than text cells."
}], "Text",
 CellChangeTimes->{{3.681060381009716*^9, 3.681060433295781*^9}}],

Cell[BoxData[
 RowBox[{"2", "+", "2"}]], "Input",
 CellChangeTimes->{{3.681060404211122*^9, 3.6810604048169947`*^9}}],

Cell["\<\
When you to change the format of a cell, highlight its cell bracket and \
choose Format\[Rule]Style from the menu. Try changing the input cell below to \
a text cell and back.\
\>", "Text",
 CellChangeTimes->{{3.681060437351776*^9, 3.68106050235738*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "+", " ", "2"}]], "Input",
 CellChangeTimes->{{3.681060473088933*^9, 3.681060473582646*^9}, {
  3.681060505053475*^9, 3.681060515636455*^9}}],

Cell[TextData[{
 "When you want to ",
 StyleBox["evaluate",
  FontSlant->"Italic"],
 " an input cell, put your cursor somewhere in the cell, or choose the cell \
bracket, and press \[ShiftKey]\[ReturnIndicator]"
}], "Text",
 CellChangeTimes->{{3.681060520261294*^9, 3.681060573730891*^9}, {
  3.68106063910458*^9, 3.681060641224339*^9}}],

Cell["\<\
Try evaluating the input cells below. Notice that when an input cell is \
evaluated an output cell is created underneath it.\
\>", "Text",
 CellChangeTimes->{{3.681060582282529*^9, 3.681060631704775*^9}, {
  3.681060737972907*^9, 3.681060748076589*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "+", " ", "2"}]], "Input",
 CellChangeTimes->{{3.681060473088933*^9, 3.681060473582646*^9}, {
  3.681060505053475*^9, 3.681060515636455*^9}}],

Cell[BoxData[
 RowBox[{"RandomWord", "[", "]"}]], "Input",
 CellChangeTimes->{{3.681060752604751*^9, 3.681060755709982*^9}}],

Cell["\<\
Cells sit inside one another. You can collapse a collection of cells by \
double clicking on the cell bracket that contains them all. Try collapsing \
all of the cells in this subsection then expanding them by double-clicking \
again.\
\>", "Text",
 CellChangeTimes->{{3.6810606690712767`*^9, 3.681060728589328*^9}, {
  3.6810608275089617`*^9, 3.681060849496921*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using notebooks", "Subsection",
 CellChangeTimes->{{3.650709689295641*^9, 3.65070969287009*^9}, 
   3.650736933561751*^9}],

Cell["Saving your work", "Text",
 CellChangeTimes->{{3.650736938032741*^9, 3.650736938680629*^9}, {
  3.650737091131604*^9, 3.650737092266799*^9}}],

Cell[TextData[{
 "Using the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " documentation"
}], "Text",
 CellChangeTimes->{{3.650736974695197*^9, 3.6507369813269243`*^9}, {
  3.681064192907847*^9, 3.6810641940119*^9}}],

Cell["Palettes", "Text",
 CellChangeTimes->{{3.650736983686912*^9, 3.650736984702888*^9}}],

Cell[TextData[{
 "Starting a line with ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAPiHmBGMT+DwQ5DAQQMWpoirACspWNHLdRHq3//wMAYj9A2w==
     "], {{0, 14}, {13, 
     0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Magnification[1],
   ImageSizeRaw->{13, 14},
   PlotRange->{{0, 13}, {0, 14}}]], "InlineOutput"],
 " (equals sign at beginning of input cell) and ",
 Cell[BoxData[
  DynamicBox[FEPrivate`FrontEndResource["WABitmaps", "SpikeyEqual"],
   ImageSizeCache->{26., {5., 23.}}]], "InlineOutput"],
 " (double equals sign at beginning of input)"
}], "Text",
 CellChangeTimes->{{3.650736987814815*^9, 3.6507369934225693`*^9}, {
  3.650737029026432*^9, 3.6507370788754663`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Would you have survived the ",
 StyleBox["Titanic",
  FontSlant->"Italic"],
 "?"
}], "Section",
 CellChangeTimes->{{3.650711330196815*^9, 3.6507113388765593`*^9}}],

Cell[TextData[{
 "Example from the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " documentation"
}], "Text",
 CellChangeTimes->{{3.650713060664138*^9, 3.650713068423192*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"titanic", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Dataset\>\"", ",", "\"\<Titanic\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.650713071746232*^9, 3.6507130839185753`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"matches", "[", "target_", "]"}], "[", "passenger_", "]"}], ":=", 
   
   RowBox[{"target", "\[Equal]", 
    RowBox[{"KeyDrop", "[", 
     RowBox[{"passenger", ",", "\"\<survived\>\""}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6507132035878468`*^9, 3.650713235065359*^9}}],

Cell[CellGroupData[{

Cell["Characters from the movie", "Subsection",
 CellChangeTimes->{{3.6507131475250397`*^9, 3.6507131538600492`*^9}, {
   3.650713184203183*^9, 3.650713185291106*^9}, 3.650713391811942*^9}],

Cell[CellGroupData[{

Cell["Rose", "Subsubsection",
 CellChangeTimes->{{3.6507133886757593`*^9, 3.65071338899574*^9}}],

Cell["\<\
There were two 17-year-old first-class female passengers and they both \
survived\
\>", "Text",
 CellChangeTimes->{{3.6507133948035307`*^9, 3.6507134151788893`*^9}}],

Cell[BoxData[
 RowBox[{"titanic", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"matches", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<1st\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "17"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<female\>\""}]}], "|>"}], "]"}], 
    "]"}], ",", "\"\<survived\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6507132660820627`*^9, 3.650713285223579*^9}, {
  3.650713316610262*^9, 3.65071336322896*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Jack", "Subsubsection",
 CellChangeTimes->{{3.650713442921908*^9, 3.65071344323392*^9}}],

Cell["\<\
There were sixteen 20-year-old third-class male passengers and only 4 survived\
\>", "Text",
 CellChangeTimes->{{3.650713466217018*^9, 3.650713501687599*^9}}],

Cell[BoxData[
 RowBox[{"titanic", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"matches", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<3rd\>\""}], ",", 
       RowBox[{"\"\<age\>\"", "\[Rule]", "20"}], ",", 
       RowBox[{"\"\<sex\>\"", "\[Rule]", "\"\<male\>\""}]}], "|>"}], "]"}], 
    "]"}], ",", "\"\<survived\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6507132660820627`*^9, 3.650713285223579*^9}, {
  3.650713316610262*^9, 3.65071336322896*^9}, {3.6507134521308403`*^9, 
  3.650713460057336*^9}}],

Cell["So Jack would have only had a 1/4 chance of survival", "Text",
 CellChangeTimes->{{3.650713506775723*^9, 3.650713520047168*^9}}]
}, Open  ]]
}, Open  ]],

Cell["Your turn", "Subsection",
 CellChangeTimes->{{3.6507132483607807`*^9, 3.6507132502807627`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Explore WolframAlpha examples", "Section",
 CellChangeTimes->{{3.6507112418487253`*^9, 3.6507112741028748`*^9}}],

Cell[CellGroupData[{

Cell["On the web", "Subsection",
 CellChangeTimes->{{3.6507136193322897`*^9, 3.650713620379519*^9}}],

Cell[TextData[ButtonBox["http://www.wolframalpha.com/examples/",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://www.wolframalpha.com/examples/"], None},
 ButtonNote->"http://www.wolframalpha.com/examples/"]], "Text",
 CellChangeTimes->{{3.650711258331511*^9, 3.650711267299078*^9}}],

Cell[TextData[{
 "If you can see information in WolframAlpha, you can use it directly within \
a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook"
}], "Text",
 CellChangeTimes->{{3.650711282007066*^9, 3.65071130397373*^9}, {
  3.650736709459003*^9, 3.6507367103451853`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Genealogy", "Subsection",
 CellChangeTimes->{{3.6507122617087107`*^9, 3.650712266083679*^9}}],

Cell["father's mother's sister's son", "WolframAlphaLong",
 CellChangeTimes->{{3.6507122489631433`*^9, 3.6507122564770737`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Historical numerals", "Subsection",
 CellChangeTimes->{{3.650712539914563*^9, 3.650712552905488*^9}}],

Cell["CLXX to Babylonian", "WolframAlphaLong",
 CellChangeTimes->{{3.650712569252062*^9, 3.650712575784751*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Astronomic and calendrical calculations", "Subsection",
 CellChangeTimes->{{3.6507126728460703`*^9, 3.6507126892206573`*^9}, {
  3.65071279158584*^9, 3.650712793721087*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "isaac newton date of birth", 
   Typeset`newq$$ = "isaac newton date of birth", Typeset`chosen$$ = 
   "PersonData[\"IsaacNewton::bhz5x\", \"BirthDate\"]", Typeset`open$$ = 
   False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13., {3., 11.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13., {3., 11.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "isaac newton date of birth", 
                  Defer[
                   PersonData["IsaacNewton::bhz5x", "BirthDate"]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"PersonData", "[", 
                  RowBox[{
                  "\"\<IsaacNewton::bhz5x\>\"", ",", " ", 
                   "\"\<BirthDate\>\""}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"PersonData", "[", 
                  
                  RowBox[{"\<\"IsaacNewton::bhz5x\"\>", ",", 
                   " ", "\<\"BirthDate\"\>"}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"PersonData", "[", 
                    
                    RowBox[{
                    "\"IsaacNewton::bhz5x\"", ",", " ", "\"BirthDate\""}], 
                    "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "isaac newton date of birth", 
                    Defer[
                    PersonData["IsaacNewton::bhz5x", "BirthDate"]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"PersonData", "[", 
                    
                    RowBox[{"\<\"IsaacNewton::bhz5x\"\>", ",", 
                    " ", "\<\"BirthDate\"\>"}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"PersonData", "[", 
                    
                    RowBox[{"\<\"IsaacNewton::bhz5x\"\>", ",", 
                    " ", "\<\"BirthDate\"\>"}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"PersonData", "[", 
                    
                    RowBox[{
                    "\"IsaacNewton::bhz5x\"", ",", " ", "\"BirthDate\""}], 
                    "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 RowBox[{"CalendarConvert", "[", 
  RowBox[{
   RowBox[{"DateObject", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1642", ",", "12", ",", "25"}], "}"}], ",", 
     RowBox[{"CalendarType", "\[Rule]", "\"\<Julian\>\""}]}], "]"}], ",", 
   "\"\<Gregorian\>\""}], "]"}]], "Input",
 NumberMarks->False],

Cell["phase of the moon on isaac newton's date of birth", "WolframAlphaLong",
 CellChangeTimes->{{3.6507126926781387`*^9, 3.650712715539751*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Economic history", "Subsection",
 CellChangeTimes->{{3.650712305002975*^9, 3.650712307026306*^9}}],

Cell["10000 current US dollars in 1933", "WolframAlphaLong",
 CellChangeTimes->{{3.6507122797378263`*^9, 3.6507122967385693`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Historic sites", "Subsection",
 CellChangeTimes->{{3.6507123479054623`*^9, 3.6507123495847197`*^9}}],

Cell["battle of hastings historic site", "WolframAlphaLong",
 CellChangeTimes->{{3.650712356594143*^9, 3.6507123612242823`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linking data", "Subsection",
 CellChangeTimes->{{3.650713855771847*^9, 3.65071386479494*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "what was the age of Leonardo when the Mona Lisa was painted?", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result for start of 1503", 1, 1, "Output", 
        "Quantity[50, \"Years\"]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TemplateBox[{"  ", "\"  \"", 
                TagBox[
                 GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"age\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TemplateBox[{
                    StyleBox["\"of\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\" \"", 
                    FormBox[
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"Leonardo da Vinci\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {Global`PeopleData, 
                    "LeonardoDaVinci::47w36"}]], Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", "\"artist, etc.\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                    0], TraditionalForm]}, "RowDefault"], 
                    TemplateBox[{
                    StyleBox["\"on\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\" \"", 
                    FormBox[
                    TagBox[
                    GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Mona Lisa\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {Global`VisualArtsData, 
                    "MonaLisa::LeonardoDaVinci"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"start date\""}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {1 -> GrayLevel[0.84], -1 -> 
                    GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                    AllowScriptLevelChange -> False], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    TraditionalForm]}, "RowDefault"]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  ColumnsEqual -> False, RowsEqual -> False, 
                  GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                  AllowScriptLevelChange -> False], 
                 Global`TagBoxWrapper["Separator" -> " | "]], ""}, 
               "RowWithSeparators"], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Age", "title" -> 
     "Result for start of 1503"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["moutput", {}, {"Quantity[50, \"Years\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["50", #& ], "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"years\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show details", "input" -> "Result__Show details"}, {}]}]}],
    Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "UnitConversion", "numsubpods" -> "5", 
     "position" -> "300", "scanner" -> "Unit", "title" -> 
     "Unit conversions"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["18\[ThinSpace]250", 
                   Global`TagBoxWrapper["StringBoxes" -> "18250"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"days\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["438\[ThinSpace]000", 
                   Global`TagBoxWrapper["StringBoxes" -> "438000"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"hours\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox[
                   RowBox[{"2.628", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "7"]}], 
                   Global`TagBoxWrapper[
                   "StringBoxes" -> RowBox[{"2.628", "\[Times]", 
                    SuperscriptBox["10", "7"]}]], SyntaxForm -> CenterDot], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"minutes\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["4.997", 
                   Global`TagBoxWrapper["StringBoxes" -> "4.997"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"average Gregorian decades\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox[
                   RowBox[{"1.577", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "9"]}], 
                   Global`TagBoxWrapper[
                   "StringBoxes" -> RowBox[{"1.577", "\[Times]", 
                    SuperscriptBox["10", "9"]}]], SyntaxForm -> CenterDot], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"seconds\"", {
                   FontFamily :> Global`$UnitFontFamily, FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
               Dot], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "2"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/PeopleDataSourceInformationNotes.\
html", "text" -> "People data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
VisualArtsDataSourceInformationNotes.html", "text" -> 
        "Visual arts data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
    "VisualArts", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.189",
     "parsetiming" -> "1.441", "parsetimedout" -> "false", "recalculate" -> 
    "", "id" -> "MSPa18251i37e4f2844bd73c00000i6d65ciae0gi94c", "host" -> 
    "http://www5a.wolframalpha.com", "server" -> "41", "related" -> 
    "http://www5a.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa18261i37e4f2844bd73c00002g5i133h25ai89e6&s=41", "version" -> "2.6"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2015, 9, 8, 11, 11, 29.466904`8.221909489466896}, "Line" -> 41,
     "SessionID" -> 18932344380031931207}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result for start of 1503", 1, 1, "Output", 
    "Quantity[50, \"Years\"]"}, Typeset`open$$ = False, Typeset`newq$$ = 
   "what was the age of Leonardo when the Mona Lisa was painted?"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{497., {62., 22.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Retrieving images", "Subsection",
 CellChangeTimes->{{3.65071401297421*^9, 3.65071401682944*^9}}],

Cell["\<\
images of Warhol's Marilyn Monroe, Campbell's Soup Cans, Eight Elvises\
\>", "WolframAlphaLong",
 CellChangeTimes->{{3.650713964988099*^9, 3.650713995166133*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1422, 1107},
WindowMargins->{{396, Automatic}, {119, Automatic}},
TaggingRules->{"SlideShow" -> True},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4383, 98, 75, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[5824, 147, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[6140, 161, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[27317, 670, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[27609, 680, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[28559, 706, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[29241, 729, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[84864, 1978, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[85071, 1987, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[109920, 2576, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[192141, 4099, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[274387, 5623, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[370827, 7453, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[413299, 8261, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[413800, 8279, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[414627, 8304, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[414831, 8313, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[415868, 8342, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[424783, 8594, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[429241, 8715, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[429711, 8733, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[429930, 8742, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[435725, 8925, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[439000, 9036, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 473141, 9859}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4383, 98, 75, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[4966, 122, 379, 8, 183, "Title"],
Cell[5348, 132, 439, 10, 99, "Subtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5824, 147, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[5891, 150, 212, 6, 114, "Title"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6140, 161, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[6229, 166, 250, 7, 80, "Section"],
Cell[CellGroupData[{
Cell[6504, 177, 110, 1, 54, "Subsection"],
Cell[6617, 180, 328, 6, 37, "Text"],
Cell[6948, 188, 364, 6, 37, "Text"],
Cell[7315, 196, 73, 1, 41, "WolframAlphaShort"],
Cell[7391, 199, 19392, 449, 91, "WolframAlphaShortInput"],
Cell[26786, 650, 190, 4, 37, "Text"],
Cell[26979, 656, 72, 1, 50, "WolframAlphaLong"],
Cell[27054, 659, 202, 4, 37, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27317, 670, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[27384, 673, 188, 2, 114, "Title"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27609, 680, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[27698, 685, 167, 2, 80, "Section"],
Cell[27868, 689, 526, 8, 85, "Text"],
Cell[28397, 699, 113, 1, 50, "WolframAlphaLong"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28559, 706, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[28648, 711, 141, 2, 80, "Section"],
Cell[28792, 715, 289, 5, 37, "Text"],
Cell[29084, 722, 108, 1, 50, "WolframAlphaLong"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29241, 729, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[29330, 734, 136, 1, 80, "Section"],
Cell[29469, 737, 260, 5, 37, "Text"],
Cell[29732, 744, 15423, 326, 116, "WolframAlphaShortInput"],
Cell[45158, 1072, 189, 2, 37, "Text"],
Cell[45350, 1076, 16502, 401, 81, "WolframAlphaShortInput"],
Cell[61855, 1479, 166, 4, 39, "Input"],
Cell[62024, 1485, 119, 1, 37, "Text"],
Cell[62146, 1488, 148, 3, 39, "Input"],
Cell[62297, 1493, 293, 5, 37, "Text"],
Cell[62593, 1500, 150, 3, 39, "Input"],
Cell[62746, 1505, 21462, 447, 104, "WolframAlphaShortInput"],
Cell[84211, 1954, 211, 4, 37, "Text"],
Cell[84425, 1960, 213, 6, 43, "Input"],
Cell[84641, 1968, 174, 4, 37, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84864, 1978, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[84931, 1981, 103, 1, 114, "Title"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85071, 1987, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[85160, 1992, 161, 2, 80, "Section"],
Cell[CellGroupData[{
Cell[85346, 1998, 109, 1, 43, "Subsubsection"],
Cell[85458, 2001, 13494, 330, 81, "WolframAlphaShortInput"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98989, 2336, 123, 1, 43, "Subsubsection"],
Cell[99115, 2339, 597, 14, 42, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99749, 2358, 118, 1, 43, "Subsubsection"],
Cell[99870, 2361, 141, 1, 37, "Text"],
Cell[100014, 2364, 9235, 185, 77, "WolframAlphaShortInput"],
Cell[109252, 2551, 150, 3, 39, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109439, 2559, 119, 1, 43, "Subsubsection"],
Cell[109561, 2562, 120, 1, 50, "WolframAlphaLong"],
Cell[109684, 2565, 175, 4, 37, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109920, 2576, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[110009, 2581, 131, 1, 80, "Section"],
Cell[110143, 2584, 81258, 1491, 102, "WolframAlphaShortInput"],
Cell[191404, 4077, 331, 7, 39, "Input"],
Cell[191738, 4086, 106, 1, 50, "WolframAlphaLong"],
Cell[191847, 4089, 245, 4, 37, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192141, 4099, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[192230, 4104, 187, 2, 80, "Section"],
Cell[192420, 4108, 229, 5, 37, "Text"],
Cell[192652, 4115, 81335, 1494, 102, "WolframAlphaShortInput"],
Cell[273990, 5611, 234, 3, 50, "WolframAlphaLong"],
Cell[274227, 5616, 111, 1, 50, "WolframAlphaLong"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[274387, 5623, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[274476, 5628, 122, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[274623, 5633, 103, 1, 54, "Subsection"],
Cell[274729, 5636, 8345, 171, 77, "WolframAlphaShortInput"],
Cell[283077, 5809, 5623, 114, 77, "WolframAlphaShortInput"],
Cell[288703, 5925, 319, 8, 37, "Text"],
Cell[289025, 5935, 150, 3, 39, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289212, 5943, 104, 1, 54, "Subsection"],
Cell[289319, 5946, 81062, 1491, 102, "WolframAlphaShortInput"],
Cell[370384, 7439, 382, 7, 61, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[370827, 7453, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[370916, 7458, 161, 2, 80, "Section"],
Cell[371080, 7462, 41436, 770, 77, "WolframAlphaShortInput"],
Cell[412519, 8234, 123, 1, 50, "WolframAlphaLong"],
Cell[CellGroupData[{
Cell[412667, 8239, 105, 1, 54, "Subsection"],
Cell[412775, 8242, 176, 4, 37, "Text"],
Cell[412954, 8248, 284, 6, 39, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[413299, 8261, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[413388, 8266, 108, 1, 80, "Section"],
Cell[413499, 8269, 127, 1, 37, "Text"],
Cell[413629, 8272, 122, 1, 50, "WolframAlphaLong"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[413800, 8279, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[413889, 8284, 163, 2, 80, "Section"],
Cell[414055, 8288, 120, 1, 37, "Text"],
Cell[414178, 8291, 157, 2, 50, "WolframAlphaLong"],
Cell[414338, 8295, 240, 3, 50, "WolframAlphaLong"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[414627, 8304, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[414694, 8307, 100, 1, 114, "Title"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414831, 8313, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[414920, 8318, 183, 2, 80, "Section"],
Cell[415106, 8322, 494, 8, 85, "Text"],
Cell[415603, 8332, 216, 4, 37, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[415868, 8342, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[415957, 8347, 110, 1, 80, "Section"],
Cell[416070, 8350, 386, 7, 61, "Text"],
Cell[CellGroupData[{
Cell[416481, 8361, 98, 1, 54, "Subsection"],
Cell[416582, 8364, 201, 3, 37, "Text"],
Cell[416786, 8369, 702, 16, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417525, 8390, 103, 1, 54, "Subsection"],
Cell[417631, 8393, 373, 8, 37, "Text"],
Cell[418007, 8403, 469, 10, 39, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418513, 8418, 96, 1, 54, "Subsection"],
Cell[418612, 8421, 179, 3, 37, "Text"],
Cell[418794, 8426, 455, 11, 39, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419286, 8442, 99, 1, 54, "Subsection"],
Cell[419388, 8445, 184, 2, 37, "Text"],
Cell[419575, 8449, 374, 8, 37, "Text"],
Cell[419952, 8459, 313, 7, 39, "Input"],
Cell[420268, 8468, 1069, 24, 118, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421374, 8497, 103, 1, 54, "Subsection"],
Cell[421480, 8500, 126, 1, 37, "Text"],
Cell[421609, 8503, 251, 6, 39, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421897, 8514, 99, 1, 54, "Subsection"],
Cell[421999, 8517, 224, 7, 37, "Text"],
Cell[422226, 8526, 475, 9, 37, "Text"],
Cell[422704, 8537, 442, 10, 66, "Input"],
Cell[423149, 8549, 780, 15, 39, "Input"],
Cell[423932, 8566, 316, 10, 37, "Text"],
Cell[424251, 8578, 471, 9, 37, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[424783, 8594, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[424872, 8599, 108, 1, 80, "Section"],
Cell[424983, 8602, 297, 5, 37, "Text"],
Cell[425283, 8609, 104, 1, 54, "Subsection"],
Cell[CellGroupData[{
Cell[425412, 8614, 95, 1, 43, "Subsection"],
Cell[425510, 8617, 253, 5, 37, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425800, 8627, 97, 1, 54, "Subsection"],
Cell[425900, 8630, 467, 8, 61, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426404, 8643, 99, 1, 54, "Subsection"],
Cell[426506, 8646, 577, 9, 85, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427120, 8660, 102, 1, 54, "Subsection"],
Cell[427225, 8663, 605, 10, 85, "Text"],
Cell[CellGroupData[{
Cell[427855, 8677, 102, 1, 43, "Subsubsection"],
Cell[427960, 8680, 364, 6, 37, "Text"],
Cell[428327, 8688, 841, 19, 61, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[429241, 8715, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[429330, 8720, 94, 1, 80, "Section"],
Cell[429427, 8723, 108, 1, 37, "Text"],
Cell[429538, 8726, 124, 1, 37, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[429711, 8733, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[429778, 8736, 115, 1, 114, "Title"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429930, 8742, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[430019, 8747, 188, 7, 80, "Section"],
Cell[CellGroupData[{
Cell[430232, 8758, 127, 2, 54, "Subsection"],
Cell[430362, 8762, 239, 6, 37, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430638, 8773, 131, 2, 54, "Subsection"],
Cell[430772, 8777, 288, 5, 61, "Text"]
}, Open  ]],
Cell[431075, 8785, 190, 2, 54, "Subsection"],
Cell[CellGroupData[{
Cell[431290, 8791, 95, 1, 43, "Subsection"],
Cell[431388, 8794, 300, 9, 37, "Text"],
Cell[431691, 8805, 268, 5, 37, "Text"],
Cell[431962, 8812, 301, 7, 37, "Text"],
Cell[432266, 8821, 117, 2, 39, "Input"],
Cell[432386, 8825, 264, 5, 37, "Text"],
Cell[432653, 8832, 174, 3, 39, "Input"],
Cell[432830, 8837, 337, 8, 37, "Text"],
Cell[433170, 8847, 263, 5, 37, "Text"],
Cell[433436, 8854, 174, 3, 39, "Input"],
Cell[433613, 8859, 124, 2, 39, "Input"],
Cell[433740, 8863, 377, 7, 61, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434154, 8875, 128, 2, 54, "Subsection"],
Cell[434285, 8879, 147, 2, 37, "Text"],
Cell[434435, 8883, 224, 7, 37, "Text"],
Cell[434662, 8892, 90, 1, 37, "Text"],
Cell[434755, 8895, 909, 23, 47, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[435725, 8925, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[435814, 8930, 181, 6, 80, "Section"],
Cell[435998, 8938, 182, 6, 37, "Text"],
Cell[436183, 8946, 262, 7, 39, "Input"],
Cell[436448, 8955, 344, 10, 39, "Input"],
Cell[CellGroupData[{
Cell[436817, 8969, 189, 2, 54, "Subsection"],
Cell[CellGroupData[{
Cell[437031, 8975, 96, 1, 43, "Subsubsection"],
Cell[437130, 8978, 175, 4, 37, "Text"],
Cell[437308, 8984, 512, 12, 39, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437857, 9001, 94, 1, 43, "Subsubsection"],
Cell[437954, 9004, 168, 3, 37, "Text"],
Cell[438125, 9009, 561, 13, 39, "Input"],
Cell[438689, 9024, 134, 1, 37, "Text"]
}, Open  ]]
}, Open  ]],
Cell[438850, 9029, 101, 1, 54, "Subsection"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[439000, 9036, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[439089, 9041, 118, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[439232, 9046, 100, 1, 54, "Subsection"],
Cell[439335, 9049, 290, 5, 37, "Text"],
Cell[439628, 9056, 289, 8, 37, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[439954, 9069, 99, 1, 54, "Subsection"],
Cell[440056, 9072, 128, 1, 50, "WolframAlphaLong"]
}, Open  ]],
Cell[CellGroupData[{
Cell[440221, 9078, 107, 1, 54, "Subsection"],
Cell[440331, 9081, 112, 1, 50, "WolframAlphaLong"]
}, Open  ]],
Cell[CellGroupData[{
Cell[440480, 9087, 179, 2, 54, "Subsection"],
Cell[440662, 9091, 13774, 339, 81, "WolframAlphaShortInput"],
Cell[454439, 9432, 319, 9, 39, "Input"],
Cell[454761, 9443, 145, 1, 50, "WolframAlphaLong"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454943, 9449, 104, 1, 54, "Subsection"],
Cell[455050, 9452, 130, 1, 50, "WolframAlphaLong"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455217, 9458, 106, 1, 54, "Subsection"],
Cell[455326, 9461, 128, 1, 50, "WolframAlphaLong"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455491, 9467, 99, 1, 54, "Subsection"],
Cell[455593, 9470, 16810, 360, 104, "WolframAlphaShortInput"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472440, 9835, 103, 1, 54, "Subsection"],
Cell[472546, 9838, 172, 3, 50, "WolframAlphaLong"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

